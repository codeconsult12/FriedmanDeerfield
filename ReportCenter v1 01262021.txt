var controlAddIn = document.getElementById('controlAddIn');

var tbl = document.createElement('table');
tbl.id = 'tblControls';
tbl.style = 'width:25%';
tbl.innerHTML = '<tr>' +
    '<td style="text-align:right">' +
    '  <p style="display:inline;">Report:&nbsp;&nbsp;</p>' +
    '</td>' +
    '<td id="tdRprtSlct">' +
    '  <select class="multiselect dropdown-toggle custom-select" style="width:180px" id="ddlReport">' +
    '    <option value="PL">Profit and loss</option>' +
    '    <option value="ASV">Account summary by vendor</option>' +
    '    <option value="Balance sheet">Balance sheet</option>' +
    '  </select>' +
    '</td>' +
    '<td></td>' +
    '<td></td>' +
    '<td></td>' +
    '</tr>';
/*+
    '<tr>' +
    '<td style="text-align:right"><label><input type="radio" name="colorRadio" checked value="Company"> Company</label><br/>' +
    '<label><input type="radio" name="colorRadio" value="Project"> Project</label></td>' +
    '<td ><select class="Company box" style="width:180px" id="ddlCompany" multiple="multiple"></select>' +
    '<select class="Project box" style="width:180px;display:none" id="ddlProj"></select></td>' +
    '</tr><tr>' +
    '<td style="text-align:right"><p>Vendor: </p></td> <td id="tdVendSlct"><select style="width:180px" id="ddlVendor" multiple="multiple"></select></td><td></td>' +
    '</tr>' +
    '<tr>' +
    '<td style="text-align:right"><p>From: </p></td> <td ><input type="text" style="width:90px" id="datepickerFrom"></td>' +
    '<td style="text-align:right"><p>To: </p></td> <td > <input type="text"  style="width:90px" id="datepickerTo"></td>' +
    '</tr><tr>' +
    '<td style="text-align:right"><p>Show as: </p></td> <td id="tdVendSlct"><select style="width:180px" id="ddlOutput">' +
    '<option value="Period">Period to date</option>' +
    '<option value="Month">By month</option>' +
    '<option value="YTD">YTD</option>' +
    '<option value="ITD">ITD</option>' +
    '</select></td><td></td>' +
    '<td>&nbsp;&nbsp;&nbsp;<button id = "btnReport" style="border-radius: 20px; width: 100px;height: 35px" >Run Report</button>';*/


controlAddIn.appendChild(tbl);
$(document).on("click", 'input[type="radio"]', function () {
    var inputValue = $(this).attr("value");
    if (inputValue === "Project") {
        $('#trCompany').hide();
        $('#trProject').show();
        var newOptions = { "Period to date": "Period", "YTD": "YTD", "ITD": "ITD" };
        var ddlOutput = $('#ddlOutput');
        ddlOutput.empty();
        $.each(newOptions, function (key, value) {
            ddlOutput.append($("<option></option>").attr("value", value).text(key));
        });
    }
    else if (inputValue === "Company") {
        $('#trCompany').show();
        $('#trProject').hide();
        var newOptions = { "Period to date": "Period", "By month": "Month", "YTD": "YTD", "ITD": "ITD" };
        var ddlOutput = $('#ddlOutput');
        ddlOutput.empty();
        $.each(newOptions, function (key, value) {
            ddlOutput.append($("<option></option>").attr("value", value).text(key));
        });
    }
});

//$(window).load(function () {
var reportType = $('#ddlReport').val();
if (reportType === 'PL') {
    $('#ddlCompany').multiselect('destroy');
    $('#ddlProj').multiselect('destroy');
    $('#ddlVendor').multiselect('destroy');

    $("#tblControls").find("tbody tr:gt(0)").remove();
    var strControls = '<tr>' +
        '  <td></td>' +
        '  <td style="text-align:left">' +
        '    <label><input type="radio" name="colorRadio" checked value="Company"> Company</label>' +
        '    &nbsp;&nbsp;' +
        '    <label><input type="radio" name="colorRadio" value="Project"> Project</label>' +
        '  </td>' +
        '</tr>' +
        '<tr id="trCompany">' +
        '  <td style="text-align:right">' +
        '    <p style="display:inline;">Company:&nbsp;&nbsp;</p>' +
        '  </td>' +
        '  <td >' +
        '    <select class="multiselect dropdown-toggle custom-select" id="ddlCompany" multiple="multiple"></select>' +
        '  </td>' +
        '</tr>' +
        '<tr  id="trProject">' +
        '  <td style="text-align:right">' +
        '    <p style="display:inline;">Project:&nbsp;&nbsp;</p>' +
        '  </td>' +
        '  <td>' +
        '    <select class="multiselect dropdown-toggle custom-select" id="ddlProj" multiple="multiple"></select>' +
        '  </td>' +
        '</tr>' +
        '<tr>' +
        '  <td style="text-align:right">' +
        '    <p style="display:inline;">Vendor:&nbsp;&nbsp;</p>' +
        '  </td>' +
        '  <td id="tdVendSlct">' +
        '    <select class="multiselect dropdown-toggle custom-select" id="ddlVendor" multiple="multiple"></select>' +
        '  </td>' +
        '  <td></td>' +
        '</tr>' +
        '<tr>' +
        '  <td style="text-align:right">' +
        '    <p style="display:inline;">From:&nbsp;&nbsp;</p>' +
        '  </td> ' +
        '  <td >' +
        '    <input type="text" style="width:130px;height:38px;display: inline-block; height: calc(1.5em + .75rem + 2px); padding: .375rem 1.75rem .375rem .75rem;' +
        'font-size: 1rem;' +
        'font-weight: 400;' +
        'line-height: 1.5;' +
        'color: #495057;' +
        'vertical-align: middle;' +
        'border: 1px solid #ced4da;' +
        'border-radius: .25rem;' +
        '-webkit-appearance: none;' +
        '-moz-appearance: none;' +
        'appearance: none;" id="datepickerFrom">' +
        '  </td>' +
        '  <td style="text-align:right">' +
        '    <p style="display:inline;">To:&nbsp;&nbsp;</p>' +
        '  </td> ' +
        '  <td > ' +
        '    <input type="text"  style="width:130px;height:38px;;display: inline-block; height: calc(1.5em + .75rem + 2px); padding: .375rem 1.75rem .375rem .75rem;' +
        'font-size: 1rem;' +
        'font-weight: 400;' +
        'line-height: 1.5;' +
        'color: #495057;' +
        'vertical-align: middle;' +
        'border: 1px solid #ced4da;' +
        'border-radius: .25rem;' +
        '-webkit-appearance: none;' +
        '-moz-appearance: none;' +
        'appearance: none;" id="datepickerTo">' +
        '  </td>' +
        '</tr>' +
        '<tr>' +
        '  <td style="text-align:right">' +
        '    <p style="display:inline;">Show as:&nbsp;&nbsp;</p>' +
        '  </td> ' +
        '  <td id="tdVendSlct">' +
        '    <select class="multiselect dropdown-toggle custom-select" style="width:180px" id="ddlOutput">' +
        '      <option value="Period">Period to date</option>' +
        '     <option value="Month">By month</option>' +
        '      <option value="YTD">YTD</option>' +
        '      <option value="ITD">ITD</option>' +
        '    </select>' +
        '  </td>' +
        '  <td></td>' +
        '  <td>' +
        '  &nbsp;&nbsp;&nbsp;' +
        '  <button id = "btnReport" style="border-radius: 20px; width: 100px;height: 35px" >Run Report</button>' +
        '  </td>' +
        '</tr>';
    $('#tblControls').append(strControls);
    $('#ddlCompany').multiselect('rebuild', { maxHeight: 200 });
    $('#trProject').hide();
    $('#ddlProj').multiselect('rebuild', { maxHeight: 200 });
    $('#ddlVendor').multiselect('rebuild', { maxHeight: 200 });

    loadDDLs();
}
else if (reportType === 'ASV') {
    $('#ddlCompany').multiselect('destroy');
    $('#ddlAccount').multiselect('destroy');
    $('#ddlVendor').multiselect('destroy');

    $("#tblControls").find("tbody tr:gt(0)").remove();
    var strControls = '<tr>' +
        '<td style="text-align:right"><p style="display:inline;">Company:&nbsp;&nbsp;</p></td> <td><select class="multiselect dropdown-toggle custom-select" id="ddlCompany" multiple="multiple"></select>' +
        '</tr><tr>' +
        '<td style="text-align:right"><p style="display:inline;">Vendor:&nbsp;&nbsp;</p></td> <td><select class="multiselect dropdown-toggle custom-select" style="width:180px"  id="ddlVendor" multiple="multiple"></select></td><td></td>' +
        '</tr>' +
        '<tr>' +
        '<td style="text-align:right"><p style="display:inline;">Account:&nbsp;&nbsp;</p></td> <td><select class="multiselect dropdown-toggle custom-select"style="width:180px" id="ddlAccount"  multiple="multiple"></select></td><td></td>' +
        '</tr>' +
        '<tr>' +
        '<td style="text-align:right"><p style="display:inline;">From:&nbsp;&nbsp;</p></td> <td ><input type="text" style="width:130px;height:38px;;display: inline-block; height: calc(1.5em + .75rem + 2px); padding: .375rem 1.75rem .375rem .75rem;' +
        'font-size: 1rem;' +
        'font-weight: 400;' +
        'line-height: 1.5;' +
        'color: #495057;' +
        'vertical-align: middle;' +
        'border: 1px solid #ced4da;' +
        'border-radius: .25rem;' +
        '-webkit-appearance: none;' +
        '-moz-appearance: none;' +
        'appearance: none;" id="datepickerFrom"></td>' +
        '<td style="text-align:right"><p style="display:inline;">To:&nbsp;&nbsp;</p></td> <td > <input type="text"  style="width:130px;height:38px;;display: inline-block; height: calc(1.5em + .75rem + 2px); padding: .375rem 1.75rem .375rem .75rem;' +
        'font-size: 1rem;' +
        'font-weight: 400;' +
        'line-height: 1.5;' +
        'color: #495057;' +
        'vertical-align: middle;' +
        'border: 1px solid #ced4da;' +
        'border-radius: .25rem;' +
        '-webkit-appearance: none;' +
        '-moz-appearance: none;' +
        'appearance: none;" id="datepickerTo"></td>' +
        '</tr><tr>' +
        '<td style="text-align:right"><p style="display:inline;">Show as:&nbsp;&nbsp;</p></td> <td id="tdVendSlct"><select class="multiselect dropdown-toggle custom-select"style="width:180px" id="ddlOutput">' +
        '<option value="Period">Period to date</option>' +
        '<option value="Month">By month</option>' +
        '<option value="YTD">YTD</option>' +
        '<option value="ITD">ITD</option>' +
        '</select></td><td></td>' +
        '<td>&nbsp;&nbsp;&nbsp;<button id = "btnReport" style="border-radius: 20px; width: 100px;height: 35px" >Run Report</button>';
    $('#tblControls').append(strControls);
    $('#ddlCompany').multiselect('rebuild', { maxHeight: 200 });
    $('#ddlAccount').multiselect('rebuild', { maxHeight: 200 });
    $('#ddlVendor').multiselect('rebuild', { maxHeight: 200 });
    loadDDLs();
}
//});

$('#ddlReport').on('change', function () {
    var reportType = $('#ddlReport').val();
    if (reportType === 'PL') {
        $('#ddlCompany').multiselect('destroy');
        $('#ddlProj').multiselect('destroy');
        $('#ddlVendor').multiselect('destroy');

        $("#tblControls").find("tbody tr:gt(0)").remove();
        var strControls = '<tr>' +
            '  <td></td>' +
            '  <td style="text-align:left">' +
            '    <label><input type="radio" name="colorRadio" checked value="Company"> Company</label>' +
            '    &nbsp;&nbsp;' +
            '    <label><input type="radio" name="colorRadio"  value="Project"> Project</label>' +
            '  </td>' +
            '</tr>' +
            '<tr id="trCompany">' +
            '  <td style="text-align:right">' +
            '    <p style="display:inline;">Company:&nbsp;&nbsp;</p>' +
            '  </td>' +
            '  <td >' +
            '    <select class="multiselect dropdown-toggle custom-select" id="ddlCompany" multiple="multiple"></select>' +
            '  </td>' +
            '</tr>' +
            '<tr  id="trProject">' +
            '  <td style="text-align:right">' +
            '    <p style="display:inline;">Project:&nbsp;&nbsp;</p>' +
            '  </td>' +
            '  <td>' +
            '    <select class="multiselect dropdown-toggle custom-select" id="ddlProj" multiple="multiple"></select>' +
            '  </td>' +
            '</tr>' +
            '<tr>' +
            '  <td style="text-align:right">' +
            '    <p style="display:inline;">Vendor:&nbsp;&nbsp;</p>' +
            '  </td>' +
            '  <td id="tdVendSlct">' +
            '    <select class="multiselect dropdown-toggle custom-select" style="width:180px" disabled id="ddlVendor" multiple="multiple"></select>' +
            '  </td>' +
            '  <td></td>' +
            '</tr>' +
            '<tr>' +
            '  <td style="text-align:right">' +
            '    <p style="display:inline;">From:&nbsp;&nbsp;</p>' +
            '  </td> ' +
            '  <td >' +
            '    <input type="text" style="width:130px;height:38px;;display: inline-block; height: calc(1.5em + .75rem + 2px); padding: .375rem 1.75rem .375rem .75rem;' +
            'font-size: 1rem;' +
            'font-weight: 400;' +
            'line-height: 1.5;' +
            'color: #495057;' +
            'vertical-align: middle;' +
            'border: 1px solid #ced4da;' +
            'border-radius: .25rem;' +
            '-webkit-appearance: none;' +
            '-moz-appearance: none;' +
            'appearance: none;" id="datepickerFrom">' +
            '  </td>' +
            '  <td style="text-align:right">' +
            '    <p style="display:inline;">To:&nbsp;&nbsp;</p>' +
            '  </td> ' +
            '  <td > ' +
            '    <input type="text"  style="width:130px;height:38px;;display: inline-block; height: calc(1.5em + .75rem + 2px); padding: .375rem 1.75rem .375rem .75rem;' +
            'font-size: 1rem;' +
            'font-weight: 400;' +
            'line-height: 1.5;' +
            'color: #495057;' +
            'vertical-align: middle;' +
            'border: 1px solid #ced4da;' +
            'border-radius: .25rem;' +
            '-webkit-appearance: none;' +
            '-moz-appearance: none;' +
            'appearance: none;" id="datepickerTo">' +
            '  </td>' +
            '</tr>' +
            '<tr>' +
            '  <td style="text-align:right">' +
            '    <p style="display:inline;">Show as:&nbsp;&nbsp;</p>' +
            '  </td> ' +
            '  <td id="tdVendSlct">' +
            '    <select class="multiselect dropdown-toggle custom-select" style="width:180px" id="ddlOutput">' +
            '      <option value="Period">Period to date</option>' +
            '     <option value="Month">By month</option>' +
            '      <option value="YTD">YTD</option>' +
            '      <option value="ITD">ITD</option>' +
            '    </select>' +
            '  </td>' +
            '  <td></td>' +
            '  <td>' +
            '  &nbsp;&nbsp;&nbsp;' +
            '  <button id = "btnReport" style="border-radius: 20px; width: 100px;height: 35px" >Run Report</button>' +
            '  </td>' +
            '</tr>';
        $('#tblControls').append(strControls);
        $('#ddlCompany').multiselect('rebuild', { maxHeight: 200 });
        $('trProject').hide();
        $('#ddlProj').multiselect('rebuild', { maxHeight: 200 });
        $('#ddlVendor').multiselect('rebuild', { maxHeight: 200 });
        loadDDLs();
    }
    else if (reportType === 'ASV') {
        $('#ddlCompany').multiselect('destroy');
        $('#ddlAccount').multiselect('destroy');
        $('#ddlVendor').multiselect('destroy');

        $("#tblControls").find("tbody tr:gt(0)").remove();
        var strControls = '<tr>' +
            '<td style="text-align:right"><p>Company:&nbsp;&nbsp;</p></td> <td>' +
            '</tr><tr>' +
            '<td style="text-align:right"><p>Vendor:&nbsp;&nbsp;</p></td> <td><select class="multiselect dropdown-toggle custom-select"select style="width:180px" disabled id="ddlVendor" multiple="multiple"></select></td><td></td>' +
            '</tr>' +
            '<tr>' +
            '<td style="text-align:right"><p>Account:&nbsp;&nbsp;</p></td> <td><select class="multiselect dropdown-toggle custom-select" style="width:180px" id="ddlAccount"  multiple="multiple"></select></td><td></td>' +
            '</tr>' +
            '<tr>' +
            '<td style="text-align:right"><p>From:&nbsp;&nbsp;</p></td> <td ><input type="text" style="width:130px;height:38px;;display: inline-block; height: calc(1.5em + .75rem + 2px); padding: .375rem 1.75rem .375rem .75rem;' +
            'font-size: 1rem;' +
            'font-weight: 400;' +
            'line-height: 1.5;' +
            'color: #495057;' +
            'vertical-align: middle;' +
            'border: 1px solid #ced4da;' +
            'border-radius: .25rem;' +
            '-webkit-appearance: none;' +
            '-moz-appearance: none;' +
            'appearance: none;" id="datepickerFrom"></td>' +
            '<td style="text-align:right"><p>To:&nbsp;&nbsp;</p></td> <td > <input type="text"  style="width:130px;height:38px;;display: inline-block; height: calc(1.5em + .75rem + 2px); padding: .375rem 1.75rem .375rem .75rem;' +
            'font-size: 1rem;' +
            'font-weight: 400;' +
            'line-height: 1.5;' +
            'color: #495057;' +
            'vertical-align: middle;' +
            'border: 1px solid #ced4da;' +
            'border-radius: .25rem;' +
            '-webkit-appearance: none;' +
            '-moz-appearance: none;' +
            'appearance: none;" id="datepickerTo"></td>' +
            '</tr><tr>' +
            '<td style="text-align:right"><p>Show as:&nbsp;&nbsp;</p></td> <td><select class="multiselect dropdown-toggle custom-select" style="width:180px" id="ddlOutput">' +
            '<option value="Period">Period to date</option>' +
            '<option value="Month">By month</option>' +
            '<option value="YTD">YTD</option>' +
            '<option value="ITD">ITD</option>' +
            '</select></td><td></td>' +
            '<td>&nbsp;&nbsp;&nbsp;<button id = "btnReport" style="border-radius: 20px; width: 100px;height: 35px" >Run Report</button>';
        $('#tblControls').append(strControls);
        $('#ddlCompany').multiselect('rebuild', { maxHeight: 200 });
        $('#ddlAccount').multiselect('rebuild', { maxHeight: 200 });
        $('#ddlVendor').multiselect('rebuild', { maxHeight: 200 });
        loadDDLs();
    }
});

var ddlOut = $('#ddlOutput').val();
if (ddlOut === "Period") {
    $('#datepickerFrom').prop('disabled', false);
    $('#datepickerFrom').val(((new Date).getMonth() + 1) + '/01/' + (new Date).getFullYear());
    var today = new Date();
    var dd = today.getDate();

    var mm = today.getMonth() + 1;
    var yyyy = today.getFullYear();
    if (dd < 10) {
        dd = '0' + dd;
    }

    if (mm < 10) {
        mm = '0' + mm;
    }
    today = mm + '/' + dd + '/' + yyyy;
    $('#datepickerTo').val(today);
}

$('#ddlOutput').on('change', function () {
    var ddlOut = $('#ddlOutput').val();
    if (ddlOut === "Period") {
        $('#datepickerFrom').prop('disabled', false);
        $('#datepickerFrom').val(((new Date).getMonth() + 1) + '/01/' + (new Date).getFullYear());
        var today = new Date();
        var dd = today.getDate();

        var mm = today.getMonth() + 1;
        var yyyy = today.getFullYear();
        if (dd < 10) {
            dd = '0' + dd;
        }

        if (mm < 10) {
            mm = '0' + mm;
        }
        today = mm + '/' + dd + '/' + yyyy;
        $('#datepickerTo').val(today);
    }

    if (ddlOut === "YTD") {
        $('#datepickerFrom').prop('disabled', false);
        $('#datepickerFrom').val('01/01/' + (new Date).getFullYear());
        var today = new Date();
        var dd = today.getDate();

        var mm = today.getMonth() + 1;
        var yyyy = today.getFullYear();
        if (dd < 10) {
            dd = '0' + dd;
        }

        if (mm < 10) {
            mm = '0' + mm;
        }
        today = mm + '/' + dd + '/' + yyyy;
        $('#datepickerTo').val(today);
    }

    if (ddlOut === "ITD") {
        $('#datepickerFrom').val('Inception');
        $('#datepickerFrom').prop('disabled', true);
        // $('#datepickerFrom').val(((new Date).getMonth() +1)+'/01/' + (new Date).getFullYear());
        var today = new Date();
        var dd = today.getDate();

        var mm = today.getMonth() + 1;
        var yyyy = today.getFullYear();
        if (dd < 10) {
            dd = '0' + dd;
        }

        if (mm < 10) {
            mm = '0' + mm;
        }
        today = mm + '/' + dd + '/' + yyyy;
        $('#datepickerTo').val(today);
    }
});
/*    option = document.createElement("option");
    option.value = 'Spend Report';
    option.text = 'Spend Report';
    selectReport.appendChild(option);
    option = document.createElement("option");
    option.value = 'Vendor Spend Report';
    option.text = 'Vendor Spend Report';
    selectReport.appendChild(option);
*/




var brk = document.createElement('br');
controlAddIn.appendChild(brk);
var hr = document.createElement('hr');
hr.style.backgroundColor = 'black';
controlAddIn.appendChild(hr);
controlAddIn.appendChild(brk);

var tag = document.createElement("div");
tag.setAttribute("id", "pivot");
controlAddIn.appendChild(tag);

var backi = document.createElement('i');
backi.setAttribute('id', 'back');
backi.setAttribute("class", "fas fa-arrow-circle-left");
backi.style.fontSize = '50px';
backi.style.display = 'none';
controlAddIn.appendChild(backi);

var divDetail = document.createElement('div');
divDetail.setAttribute('id', 'divDetail');
divDetail.style.display = 'none';
controlAddIn.appendChild(divDetail);

var divmodal = document.createElement('div');
divmodal.setAttribute('id', 'divWait');
divmodal.style.display = 'none';
divmodal.style.position = 'fixed';
divmodal.style.zIndex = '1000';
divmodal.style.top = '0';
divmodal.style.left = '0';
divmodal.style.height = '4%';
divmodal.style.width = '35%';
divmodal.style.background = 'rgba(255,255,255,.8) url("http://i.stack.imgur.com/FhHRx.gif") 50% 50% no-repeat';

controlAddIn.appendChild(divmodal);


//var iframe = parent.document.querySelectorAll("[title='Reports']")[1];
//iframe.style.minHeight='700px';
//iframe.style.height='700px';

$(function () {
    $("#datepickerFrom").datepicker();
    $("#datepickerTo").datepicker();
});
var arrDim = [];
function loadDDLs() {
    $.ajax({
        url: "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company",
        type: "GET", //or POST?
        dataType: "json",
        beforeSend: function (request) {
            AddToHeader(request);
        },
        success: function (data) {
            $('#ddlCompany').multiselect('destroy');

            var sel = $("#ddlCompany");
            sel.empty();

            sel.append('<option value="All" selected>All</option>');
            for (var i = 0; i < data.value.length; i++) {
                if (data.value[i].Display_Name === "Ancora Innovation, LLC" || data.value[i].Display_Name === "Blackfan Circle Inn, LLC" ||
                    data.value[i].Display_Name === "Blue One Biosciences, LLC" || data.value[i].Display_Name === "Blue Q Biosciences LLC" ||
                    data.value[i].Display_Name === "Bluefield Innovations, LLC" || data.value[i].Display_Name === "Deerfield BI, LLC" ||
                    data.value[i].Display_Name === "Deerfield D&D, LLC" || data.value[i].Display_Name === "Exohalt Therapeutics, LLC" ||
                    data.value[i].Display_Name === "Four Points Innovation LLC" || data.value[i].Display_Name === "Galium Biosciences LLC" ||
                    data.value[i].Display_Name === "Hudson Heights Innovations LLC" || data.value[i].Display_Name === "Lab1636, LLC" ||
                    data.value[i].Display_Name === "Lakeside Discovery, LLC" || data.value[i].Display_Name === "Orchard Innovations, LLC" ||
                    data.value[i].Display_Name === "Pinnacle Hill, LLC" || data.value[i].Display_Name === "Poseidon Innovation, LLC" ||
                    data.value[i].Display_Name === "West Loop Innovations, LLC") {
                    sel.append('<option value="' + data.value[i].Display_Name + '">' + data.value[i].Display_Name + '</option>');
                }
            }
            sel.multiselect('rebuild', { includeSelectAllOption: true, maxHeight: 200 });
            GetProjects();
            GetVendors();
            //            GetGLAccounts();
        }
    });
}
function GetProjects() {
    var i,
        results = [],
        deferred,
        deferreds = [];// 1. Make multiple AJAX calls to a Server
    $('#ddlCompany > option').each(function (i) {
        if (i > 0) {
            var val = this.value;
            CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + val + "')/GLE?$select=Global_Dimension_1_Code &$filter=Global_Dimension_1_Code ne ''";
            deferred = $.ajax({
                url: CompUrl,
                type: "GET", //or POST?
                dataType: "json",
                beforeSend: function (request) {
                    AddToHeader(request);
                },
                success: function (result) {
                    // 2. Store the results in an array
                    var data = result.value;
                    results.push(data);
                }
            });
        }
    });
    deferreds.push(deferred);

    $.when.apply($, deferreds).then(function () {
        var selAccount = $("#ddlProj");
        selAccount.append('<option value="All" selected>All</option>');

        var final = results.flat();
        console.log(final);
        for (var i = 0; i < final.length; i++) {

            if ($("#ddlProj option[value='" + final[i].Global_Dimension_1_Code + "']").length == 0) {
                selAccount.append('<option value="' + final[i].Global_Dimension_1_Code + '">' + final[i].Global_Dimension_1_Code + '</option>');
            }
        }
        $("#ddlProj").multiselect('rebuild', { maxHeight: 200 });
    });
}
function GetGLAccounts() {
    var companies = $('#ddlCompany :selected').text();
    if (companies === 'All') {
        $('#ddlCompany > option').each(function () {
            var val = this.value;

            var glURI = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + val + "')/GLE?$select=G_L_Account_Name";
            $.ajax({
                url: glURI,
                type: "GET", //or POST?
                dataType: "json",
                beforeSend: function (request) {
                    AddToHeader(request);
                },
                success: function (dataDim) {
                    var selAccount = $("#ddlAccount");
                    selAccount.append('<option value="All">All</option>');
                    for (var i = 0; i < dataDim.value.length; i++) {
                        if ($("#ddlAccount option[value='" + dataDim.value[i].G_L_Account_Name + "']").length == 0) {
                            selAccount.append('<option value="' + dataDim.value[i].G_L_Account_Name + '">' + dataDim.value[i].G_L_Account_Name + '</option>');
                        }
                    }
                }
            });
        })
    }
    else {

    }
}

function GetVendors() {
    var companies = $('#ddlCompany :selected').text();
    $('#ddlVendor').multiselect('destroy');

    if (companies === 'All') {
        var selAccount = $("#ddlVendor");

        selAccount.append('<option value="All" selected>All</option>');
        $('#ddlCompany > option').each(function (i) {
            if (i > 0) {
                var val = this.value;


                var vendURI = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + val + "')/GLE?$select=Vendor_Name &$filter=Vendor_Name ne ''";
                $.ajax({

                    url: vendURI,
                    type: "GET", //or POST?
                    dataType: "json",
                    beforeSend: function (request) {
                        AddToHeader(request);
                    },
                    success: function (dataDim) {
                        var selAccount = $("#ddlVendor");

                        //selAccount.append('<option value="All">All</option>');
                        for (var i = 0; i < dataDim.value.length; i++) {

                            if ($("#ddlVendor option[value='" + dataDim.value[i].Vendor_Name + "']").length == 0) {
                                selAccount.append('<option value="' + dataDim.value[i].Vendor_Name + '">' + dataDim.value[i].Vendor_Name + '</option>');

                            }
                        }
                        $("#ddlVendor").multiselect('rebuild', { maxHeight: 200 });
                    }
                });
            }
        })
    }
    else {

    }
}

$('#ddlCompany').on('change', function () {

    if ($('#ddlReport').val() === 'PL') {

        var comp = $('#ddlCompany').val();
        var uri = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + comp + "')/Vendor_Card";
        $.ajax({
            url: uri,
            type: "GET", //or POST?
            dataType: "json",
            beforeSend: function (request) {
                AddToHeader(request);
            },
            success: function (data) {

                var sel = $("#ddlVendor");
                sel.empty();
                sel.append('<option value="All" selected>All</option>');

                for (var i = 0; i < data.value.length; i++) {
                    sel.append('<option value="' + data.value[i].Name + '">' + data.value[i].Name + '</option>');
                }
                $('#ddlVendor').multiselect('setOptions', {
                    maxHeight: 300,
                    includeResetOption: true,
                    resetText: 'Deselect All'
                });
                $('#ddlVendor').multiselect('rebuild');
            }
        });
    }
});





/*$.ajax({
    url: "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('Deerfield%20D%26D%2C%20LLC')/GLE",
    type: "GET", //or POST?
    dataType: "json",
    beforeSend: function (request) {
        AddToHeader(request);
    },
    success: function (data) {
        

        $(function () {
            var sum = $.pivotUtilities.aggregatorTemplates.sum;
            var numberFormat = $.pivotUtilities.numberFormat;
            var intFormat = numberFormat({ digitsAfterDecimal: 0 });
            $(function () {
                $("#pivot").pivot(data.value,
                    {
                        rows: ["G_L_Account_No", "Document_No"],
                        cols: ["Global_Dimension_1_Code"],
                        aggregator: sum(intFormat)(["Amount"])
                    }
                );
            });
        });
    },
    error: function () { alert("error") }
})
*/

function AddToHeader(xhr) {

    xhr.setRequestHeader("Authorization", "Basic " + btoa("DYN365-ADMIN:kMLYu2C64oLch3JkvYqzyhvfIfLgOtpd5buBj36L6k4="));
}


Date.prototype.yyyymmdd = function (b) {
    if (b) {
        var mm = this.getMonth() + 1; // ****getMonth() is zero-based
        var dd = this.getDate();

        return [this.getFullYear(),
        (mm > 9 ? '' : '0') + mm,
        (dd > 9 ? '' : '0') + dd
        ].join('-');
    }
    else {
        var mm = this.getMonth() + 1; // getMonth() is zero-based
        var dd = this.getDate();

        return [this.getFullYear() - 1,
        (mm > 9 ? '' : '0') + mm,
        (dd > 9 ? '' : '0') + dd
        ].join('-');
    }
};




$("#btnReport").on('click', function () {
    $('#divWait').show();
    $('#pivot').show();
    $('#back').hide();
    $('#divDetail').hide();
    if ($('#ddlReport').val() === "PL") {
        var radioValue = $("input[name='colorRadio']:checked").val();
        console.log(radioValue);
        if (radioValue === 'Company')
            PLCompany();
        else if (radioValue === 'Project')
            PLProject();
    }
    else if ($('#ddlReport').val() === "ASV") {
        ASV();
    }
});

function PLCompany() {
    var outputAs = $('#ddlOutput').val();
    var comp = $('#ddlCompany').val();
    var vendors = $('#ddlVendor').val();
    if (outputAs === 'ITD') {
        PLCompanyITD(comp, vendors);
    }
    if (outputAs === 'YTD') {
        PLCompanyYTD(comp, vendors);
    }
    if (outputAs === 'Period') {
        PLCompanyPeriod(comp, vendors);
    }
    if (outputAs === 'Month') {
        PLCompanyMonth(comp, vendors);
    }
}

function PLProject() {
    var outputAs = $('#ddlOutput').val();
    var proj = $('#ddlProj').val();
    var vendors = $('#ddlVendor').val();
    if (outputAs === 'ITD') {
        PLProjectITD(proj, vendors);
    }
    if (outputAs === 'YTD') {
        PLProjectYTD(proj, vendors);
    }
    if (outputAs === 'Period') {
        PLProjectPeriod(proj, vendors);
    }
    if (outputAs === 'Month') {
        PLProjectMonth(proj, vendors);
    }
}

function ASV() {

}
var globalData = [];
function PLCompanyITD(company, vend) {
    if (company.length > 1) {
        var i,
            results = [],
            deferred,
            deferreds = [];// 1. Make multiple AJAX calls to a Server
        for (i = 0; i < company.length; ++i) {

            CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + company[i] + "')/GLE";
            deferred = $.ajax({
                url: CompUrl,
                type: "GET", //or POST?
                dataType: "json",
                beforeSend: function (request) {
                    AddToHeader(request);
                },
                success: function (result) {
                    // 2. Store the results in an array
                    var data = result.value;
                    var str = this.url;
                    var mySubString = str.substring(
                        str.lastIndexOf("(") + 2,
                        str.lastIndexOf(")") - 1
                    );
                    $.each(data, function (i, item) {

                        item.Translator = mySubString;
                    });
                    results.push(data);
                }
            });
            deferreds.push(deferred);
        }
        $.when.apply($, deferreds).then(function () {
            // 3. Process the result array.
            var Months = {
                "01": "January",
                "02": "Februaray",
                "03": "March",
                "04": "April",
                "05": "May",
                "06": "June",
                "07": "July",
                "08": "August",
                "09": "September",
                "10": "October",
                "11": "November",
                "12": "December"
            };
            //globalData = results;
            var final;

            final = results.flat(1);
            globalData = final;
            $.each(final, function (i, item) {
                //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                item.G_L_Account_Name = item.G_L_Account_Name.trim();
            });
            var res = '';

            if (vend[0] === 'All') {
                res = $.grep(final, function (n, i) {
                    return n.G_L_Account_No >= 50000;
                });
            }
            else {
                var filteredArray = final.filter(function (array_el) {
                    return vend.filter(function (anotherOne_el) {
                        return anotherOne_el == array_el.Vendor_Name;
                    }).length > 0
                });

                res = $.grep(filteredArray, function (n, i) {
                    return n.G_L_Account_No >= 50000;
                });
            }

            var resITD = $.grep(res, function (n, i) {
                return n.Description.indexOf("Close") < 0;
            });
            //        if (data1.value.length === 0) {

            //            var strFrom = prevdateFrom.toString();
            //            var strTo = prevdateTo.toString();

            //            if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
            //item.Period = "Period From " + dateFrom + " To " + dateTo;
            //                res.push({ "Period": Months[strFrom.substring(5, 7)] + " " + strFrom.substring(0, 4) });

            //            }
            //            else {
            //                res.push({ "Period": "From " + prevdateFrom + " To " + prevdateTo });
            //            }
            //res.push({ "Period": "Period From " + prevdateFrom + " To " + prevdateTo });
            //      }

            $(function () {
                var sum = $.pivotUtilities.aggregatorTemplates.sum;
                var numberFormat = $.pivotUtilities.numberFormat;
                var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                $(function () {
                    $("#pivot").pivot(resITD,
                        {
                            rows: ["G_L_Account_No", "G_L_Account_Name"],
                            cols: ["Period"],
                            aggregator: sum(intFormat)(["Amount"]),
                            colOrder: "key_z_to_a"
                        }
                    );
                    var Header = '<div style="border:black solid 1.5pt;min-width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                        '<h2 >' + company + '</h2>' +
                        '<h3 >Profit and Loss</h3>' +
                        '<p>Period: ' + minDate(res) + '..' + $('#datepickerTo').val() + '</p>' +
                        '</div><br/><br/>';
                    $(Header).insertBefore('.pvtTable');
                    $('.pvtTable thead tr').eq(1).remove();
                    $('.pvtTable thead tr th:eq(1)').remove();
                    $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th><th></th>');
                    $(".pvtTable th:last-child, .pvtTable td:last-child").remove();
                    $('.pvtTable').switchColumns(0, 1);

                    $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(0)').text('Account Number');
                    $('.pvtTable thead tr th:eq(1)').text('Account Description');
                    $('.pvtTable thead tr th:eq(2)').text('Amount');




                    //  $(".pvtTable tbody tr:last").prev().remove();
                    $('.pvtTable').ConvertHyperlink();
                    $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                    $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                    $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                    $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                    $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                    $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                    $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                    $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                    var Ttl = $('.pvtTable tbody tr:last td:eq(0)').text();
                    var int = parseInt(Ttl, 10);
                    if (int > 0) {
                        $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td>(' + Ttl + ')</td>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> (' + Ttl + ')</td>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                    }
                    else {

                        $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td>' + Ttl + '</td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> ' + Ttl + ' </td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                    }

                    $('.pvtTable tbody tr').each(function () {
                        if ($(this).find("td:last-child a").text() == 0)
                            $(this).find("td:last-child a").text('-');
                    });



                    /* if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                         $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                     }*/
                    //                                $('#btnExport').css('display','block');
                    $('table').eq(1).tableExport({
                        type: 'excel',
                        filename: 'Profit & loss by month',
                        position: 'top',
                        formats: ['csv']
                    });

                    //                                $('table').eq(1).tableExport({
                    //                                  type: 'pdf',
                    //                                jspdf: {
                    //                                  orientation: 'p',
                    //                                margins: { left: 20, top: 10 },
                    //                              autotable: false
                    //                        },
                    //                      formats:['pdf']
                    //                });
                    $('.pvtTable caption').css('text-align', 'left');
                    $('.pvtTable caption button').text('Export to Excel');
                    $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                    $('<input disabled type="button" id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                    $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                });

            });
$('#divWait').hide();




            // groupedResults = groupByStatus(results)
            // 4. Create DOMs and attach them to HTML page.
            // buildDOMAndAttach(groupedResults);
        });


    }
    else if (company.length === 1) {
        if (company[0] == "All") {
            var i,
                results = [],
                deferred,
                deferreds = [];// 1. Make multiple AJAX calls to a Server
            $('#ddlCompany > option').each(function () {
                if (this.text != "All") {
                    CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + this.text + "')/GLE";
                    deferred = $.ajax({
                        url: CompUrl,
                        type: "GET", //or POST?
                        dataType: "json",
                        beforeSend: function (request) {
                            AddToHeader(request);
                        },
                        success: function (result) {
                            // 2. Store the results in an array
                            var data = result.value;
                            var str = this.url;
                            var mySubString = str.substring(
                                str.lastIndexOf("(") + 2,
                                str.lastIndexOf(")") - 1
                            );

                            $.each(data, function (i, item) {

                                item.Translator = mySubString;
                            });

                            /* $.each(data, function (i, item) {
                                 
                                 item.Translator = $(this).url;
                             });*/
                            results.push(data);

                        }
                    });
                    deferreds.push(deferred);
                }
            });
            $.when.apply($, deferreds).then(function () {
                // 3. Process the result array.
                var Months = {
                    "01": "January",
                    "02": "Februaray",
                    "03": "March",
                    "04": "April",
                    "05": "May",
                    "06": "June",
                    "07": "July",
                    "08": "August",
                    "09": "September",
                    "10": "October",
                    "11": "November",
                    "12": "December"
                };
                var final;
                final = results.flat(1);
                globalData = final;
                $.each(final, function (i, item) {
                    //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                    item.G_L_Account_Name = item.G_L_Account_Name.trim();
                });
                var res = '';

                if (vend[0] === 'All') {
                    res = $.grep(final, function (n, i) {
                        return n.G_L_Account_No >= 50000;
                    });
                }
                else {
                    var filteredArray = final.filter(function (array_el) {
                        return vend.filter(function (anotherOne_el) {
                            return anotherOne_el == array_el.Vendor_Name;
                        }).length > 0
                    });

                    res = $.grep(filteredArray, function (n, i) {
                        return n.G_L_Account_No >= 50000;
                    });
                }
                var resITD = $.grep(res, function (n, i) {
                    return n.Description.indexOf("Close") < 0;
                });


                //        if (data1.value.length === 0) {

                //            var strFrom = prevdateFrom.toString();
                //            var strTo = prevdateTo.toString();

                //            if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                //item.Period = "Period From " + dateFrom + " To " + dateTo;
                //                res.push({ "Period": Months[strFrom.substring(5, 7)] + " " + strFrom.substring(0, 4) });

                //            }
                //            else {
                //                res.push({ "Period": "From " + prevdateFrom + " To " + prevdateTo });
                //            }
                //res.push({ "Period": "Period From " + prevdateFrom + " To " + prevdateTo });
                //      }

                $(function () {
                    var sum = $.pivotUtilities.aggregatorTemplates.sum;
                    var numberFormat = $.pivotUtilities.numberFormat;
                    var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                    $(function () {
                        $("#pivot").pivot(resITD,
                            {
                                rows: ["G_L_Account_No", "G_L_Account_Name"],
                                cols: ["Period"],
                                aggregator: sum(intFormat)(["Amount"]),
                                colOrder: "key_z_to_a"
                            }
                        );
                        var Header = '<div style="border:black solid 1.5pt;min-width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                            '<h2 >' + company + '</h2>' +
                            '<h3 >Profit and Loss</h3>' +
                            '<p>Period: ' + minDate(res) + '..' + $('#datepickerTo').val() + '</p>' +
                            '</div><br/><br/>';
                        $(Header).insertBefore('.pvtTable');
                        $('.pvtTable thead tr').eq(1).remove();
                        $('.pvtTable thead tr th:eq(1)').remove();
                        $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th><th></th>');
                        $(".pvtTable th:last-child, .pvtTable td:last-child").remove();
                        $('.pvtTable').switchColumns(0, 1);

                        $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(0)').text('Account Number');
                        $('.pvtTable thead tr th:eq(1)').text('Account Description');
                        $('.pvtTable thead tr th:eq(2)').text('Amount');




                        //  $(".pvtTable tbody tr:last").prev().remove();
                        $('.pvtTable').ConvertHyperlink();
                        $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                        $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                        $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                        $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                        $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                        $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                        $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                        var Ttl = $('.pvtTable tbody tr:last td:eq(0)').text();
                        var int = parseInt(Ttl, 10);
                        if (int > 0) {
                            $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td> (' + Ttl + ')</td>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                            $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> (' + Ttl + ') </td>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        }
                        else {

                            $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td> ' + Ttl + ' </td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                            $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> ' + Ttl + ' </td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        }

                        $('.pvtTable tbody tr').each(function () {
                            if ($(this).find("td:last-child a").text() == 0)
                                $(this).find("td:last-child a").text('-');
                        });



                        /* if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                             $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                         }*/
                        //                                $('#btnExport').css('display','block');
                        $('table').eq(1).tableExport({
                            type: 'excel',
                            filename: 'Profit & loss by month',
                            position: 'top',
                            formats: ['csv']
                        });

                        //                                $('table').eq(1).tableExport({
                        //                                  type: 'pdf',
                        //                                jspdf: {
                        //                                  orientation: 'p',
                        //                                margins: { left: 20, top: 10 },
                        //                              autotable: false
                        //                        },
                        //                      formats:['pdf']
                        //                });
                        $('.pvtTable caption').css('text-align', 'left');
                        $('.pvtTable caption button').text('Export to Excel');
                        $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                        $('<input disabled type="button" id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                        $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                    });

                });
                $('#divWait').hide();




                // groupedResults = groupByStatus(results)
                // 4. Create DOMs and attach them to HTML page.
                // buildDOMAndAttach(groupedResults);
            });



        }
        else {

            var dateTo = new Date($('#datepickerTo').val()).yyyymmdd(true);

            var CurrPnLURL = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + company[0] + "')/GLE?$filter=Posting_Date le " + dateTo;// + " and Posting_Date le " + dateTo;
            $.ajax({
                url: CurrPnLURL,
                type: "GET", //or POST?
                dataType: "json",
                beforeSend: function (request) {
                    AddToHeader(request);
                },
                success: function (data) {
                    /*$.ajax({
                        url: PrevPnLURL,
                        type: "GET", //or POST?
                        dataType: "json",
                        beforeSend: function (request) {
                            AddToHeader(request);
                        },
                        success: function (data1) {*/
                    var final = data.value;//.concat(data1.value);
                    var str = this.url;
                    var mySubString = str.substring(
                        str.lastIndexOf("(") + 2,
                        str.lastIndexOf(")") - 1
                    );
                    $.each(final, function (i, item) {
                        item.Translator = mySubString;
                    });




                    globalData = data.value;

                    var Months = {
                        "01": "January",
                        "02": "Februaray",
                        "03": "March",
                        "04": "April",
                        "05": "May",
                        "06": "June",
                        "07": "July",
                        "08": "August",
                        "09": "September",
                        "10": "October",
                        "11": "November",
                        "12": "December"
                    };
                    $.each(final, function (i, item) {
                        //                            var strFrom = dateFrom.toString();
                        //                            var strTo = dateTo.toString();

                        //                            if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                        //                                //item.Period = "Period From " + dateFrom + " To " + dateTo;
                        //                                item.Period = Months[strFrom.substring(5, 7)] + " 2020";

                        //                            }
                        //                            else {
                        //                                item.Period = "From " + dateFrom + " To " + dateTo;
                        //                            }
                        //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                        item.G_L_Account_Name = item.G_L_Account_Name.trim();
                    });
                    var resITD = '';
                    if (vend[0] === 'All') {
                        resITD = $.grep(final, function (n, i) {
                            return n.G_L_Account_No >= 50000;
                        });
                    }
                    else {
                        var filteredArray = final.filter(function (array_el) {
                            return vend.filter(function (anotherOne_el) {
                                return anotherOne_el == array_el.Vendor_Name;
                            }).length > 0
                        });
                        resITD = $.grep(filteredArray, function (n, i) {
                            return n.G_L_Account_No >= 50000// && n.VLC_Shortcut_Dimension_4_Code

                        });
                    }
                    var resITD = $.grep(resITD, function (n, i) {
                        return n.Description.indexOf("Close") < 0;
                    });
                    /*-                        if (data1.value.length === 0) {
                    
                                                var strFrom = prevdateFrom.toString();
                                                var strTo = prevdateTo.toString();
                    
                                                if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                                                    //item.Period = "Period From " + dateFrom + " To " + dateTo;
                                                    res.push({ "Period": Months[strFrom.substring(5, 7)] + " " + strFrom.substring(0, 4) });
                    
                                                }
                                                else {
                                                    res.push({ "Period": "From " + prevdateFrom + " To " + prevdateTo });
                                                }
                                                //res.push({ "Period": "Period From " + prevdateFrom + " To " + prevdateTo });
                                            }*/

                    $(function () {
                        var sum = $.pivotUtilities.aggregatorTemplates.sum;
                        var numberFormat = $.pivotUtilities.numberFormat;
                        var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                        $(function () {
                            $("#pivot").pivot(resITD,
                                {
                                    rows: ["G_L_Account_No", "G_L_Account_Name"],
                                    cols: ["Period"],
                                    aggregator: sum(intFormat)(["Amount"]),
                                    colOrder: "key_z_to_a"
                                }
                            );
                            var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                                '<h2 >' + company[0] + '</h2>' +
                                '<h3 >Profit and Loss</h3>' +
                                '<p>Period: ' + minDate(resITD) + '..' + $('#datepickerTo').val() + '</p>' +
                                '</div><br/><br/>';
                            $(Header).insertBefore('.pvtTable');
                            $('.pvtTable thead tr').eq(1).remove();
                            $('.pvtTable thead tr th:eq(1)').remove();
                            $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th><th></th>');
                            $(".pvtTable th:last-child, .pvtTable td:last-child").remove();
                            $('.pvtTable').switchColumns(0, 1);

                            $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(0)').text('Account Number');
                            $('.pvtTable thead tr th:eq(1)').text('Account Description');
                            $('.pvtTable thead tr th:eq(2)').text('Amount');




                            //  $(".pvtTable tbody tr:last").prev().remove();
                            $('.pvtTable').ConvertHyperlink();
                            $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                            $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                            $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                            $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                            $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                            $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                            $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                            var Ttl = $('.pvtTable tbody tr:last td:eq(0)').text();
                            var int = parseInt(Ttl, 10);
                            if (int > 0) {
                                $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td> (' + Ttl + ') </td>');
                                $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                                $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> (' + Ttl + ') </td>');
                                $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                            }
                            else {

                                $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td>' + Ttl + ' </td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                                $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                                $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> ' + Ttl + ' </td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                                $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                            }

                            $('.pvtTable tbody tr').each(function () {
                                if ($(this).find("td:last-child a").text() == 0)
                                    $(this).find("td:last-child a").text('-');
                            });



                            /* if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                                 $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                             }*/
                            //                                $('#btnExport').css('display','block');
                            $('table').eq(1).tableExport({
                                type: 'excel',
                                filename: 'Profit & loss by month',
                                position: 'top',
                                formats: ['csv']
                            });

                            //                                $('table').eq(1).tableExport({
                            //                                  type: 'pdf',
                            //                                jspdf: {
                            //                                  orientation: 'p',
                            //                                margins: { left: 20, top: 10 },
                            //                              autotable: false
                            //                        },
                            //                      formats:['pdf']
                            //                });
                            $('.pvtTable caption').css('text-align', 'left');
                            $('.pvtTable caption button').text('Export to Excel');
                            $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                            $('<input disabled type="button" id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                            $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                        });
                    });
                    $('#divWait').hide();
                },
                error: function () {
                    alert("error");
                }
            });
            /*},
     
           }   error: function () { alert("error") }
        })*/
        }
    }
}

function PLProjectITD(project, vend) {

    var dateTo = new Date($('#datepickerTo').val()).yyyymmdd(true);
    if (project.length > 1) {
        var i,
            results = [],
            deferred,
            deferreds = [];// 1. Make multiple AJAX calls to a Server
        $('#ddlCompany > option').each(function () {
            if (this.text != "All") {
                CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + this.text + "')/GLE?$filter=Global_Dimension_1_Code ne '' and Posting_Date le " + dateTo;
                deferred = $.ajax({
                    url: CompUrl,
                    type: "GET", //or POST?
                    dataType: "json",
                    beforeSend: function (request) {
                        AddToHeader(request);
                    },
                    success: function (result) {
                        // 2. Store the results in an array
                        var data = result.value;
                        var str = this.url;
                        var mySubString = str.substring(
                            str.lastIndexOf("(") + 2,
                            str.lastIndexOf(")") - 1
                        );

                        $.each(data, function (i, item) {

                            item.Translator = mySubString;
                        });

                        /* $.each(data, function (i, item) {
                             
                             item.Translator = $(this).url;
                         });*/
                        results.push(data);

                    }
                });
                deferreds.push(deferred);
            }
        });
        $.when.apply($, deferreds).then(function () {
            // 3. Process the result array.
            var Months = {
                "01": "January",
                "02": "Februaray",
                "03": "March",
                "04": "April",
                "05": "May",
                "06": "June",
                "07": "July",
                "08": "August",
                "09": "September",
                "10": "October",
                "11": "November",
                "12": "December"
            };
            var final;
            final = results.flat(1);
            globalData = final;
            $.each(final, function (i, item) {
                //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                item.G_L_Account_Name = item.G_L_Account_Name.trim();
            });

            var res = '';

            var final1 = final.filter(function (array_el) {
                return project.filter(function (anotherOne_el) {
                    return anotherOne_el == array_el.Global_Dimension_1_Code;
                }).length > 0
            });

            if (vend[0] === 'All') {
                res = $.grep(final1, function (n, i) {
                    return n.G_L_Account_No >= 50000;
                });
            }
            else {
                var filteredArray = final1.filter(function (array_el) {
                    return vend.filter(function (anotherOne_el) {
                        return anotherOne_el == array_el.Vendor_Name;
                    }).length > 0
                });

                res = $.grep(filteredArray, function (n, i) {
                    return n.G_L_Account_No >= 50000;
                });
            }
            var resITD = $.grep(res, function (n, i) {
                return n.Description.indexOf("Close") < 0;
            });
            //        if (data1.value.length === 0) {

            //            var strFrom = prevdateFrom.toString();
            //            var strTo = prevdateTo.toString();

            //            if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
            //item.Period = "Period From " + dateFrom + " To " + dateTo;
            //                res.push({ "Period": Months[strFrom.substring(5, 7)] + " " + strFrom.substring(0, 4) });

            //            }
            //            else {
            //                res.push({ "Period": "From " + prevdateFrom + " To " + prevdateTo });
            //            }
            //res.push({ "Period": "Period From " + prevdateFrom + " To " + prevdateTo });
            //      }

            $(function () {
                var sum = $.pivotUtilities.aggregatorTemplates.sum;
                var numberFormat = $.pivotUtilities.numberFormat;
                var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                $(function () {
                    $("#pivot").pivot(resITD,
                        {
                            rows: ["G_L_Account_No", "G_L_Account_Name"],
                            cols: ["Global_Dimension_1_Code"],
                            aggregator: sum(intFormat)(["Amount"]),
                            colOrder: "key_z_to_a"
                        }
                    );
                    var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                        //'<h2 >' + company + '</h2>' +
                        '<h3 >Profit and Loss</h3>' +
                        '<p>Period: ' + minDate(res) + '..' + $('#datepickerTo').val() + '</p>' +
                        '</div><br/><br/>';
                    $(Header).insertBefore('.pvtTable');
                    $('.pvtTable thead tr').eq(1).remove();
                    $('.pvtTable thead tr th:eq(1)').remove();
                    $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th>');

                    $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                    $('<th></th>').insertAfter($('.pvtTable thead tr th:eq(0)'));

                    $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(0)').text('Account Number');
                    $('.pvtTable thead tr th:eq(1)').text('Account Description');

                    //  $(".pvtTable tbody tr:last").prev().remove();
                    $('.pvtTable').ConvertHyperlinkProject();
                    $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                    $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                    $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                    $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                    $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                    $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                    $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                    $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                    var strrow1 = '<tr><th class="pvtTotalLabel pvtColTotalLabel">Net Operating Income</th><th></th>>';
                    var strrow2 = '<tr><th class="pvtTotalLabel pvtColTotalLabel">Net Income</th><th></th>';
                    var $td = $('.pvtTable tbody tr:last').find('td');
                    $td.each(function (i, ele) {

                        var Ttl = $('.pvtTable tbody tr:last td:eq(' + i + ')').text();
                        var int = parseInt(Ttl, 10);
                        if (int > 0) {
                            strrow1 += '<td> (' + Ttl + ') </td>';
                            strrow2 += '<td> (' + Ttl + ') </td>';
                        }
                        else {
                            strrow1 += '<td> ' + Ttl + ' </td>';
                            strrow2 += '<td> ' + Ttl + ' </td>';
                        }
                    });
                    $('.pvtTable tbody tr:last').after(strrow1);//'<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                    $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                    $('.pvtTable tbody tr:last').after(strrow2);//<td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                    $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                    $('.pvtTable tbody tr').each(function () {
                        if ($(this).find("td:last-child a").text() == 0)
                            $(this).find("td:last-child a").text('-');
                    });



                    /* if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                         $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                     }*/
                    //                                $('#btnExport').css('display','block');
                    $('table').eq(1).tableExport({
                        type: 'excel',
                        filename: 'Profit & loss by month',
                        position: 'top',
                        formats: ['csv']
                    });

                    //                                $('table').eq(1).tableExport({
                    //                                  type: 'pdf',
                    //                                jspdf: {
                    //                                  orientation: 'p',
                    //                                margins: { left: 20, top: 10 },
                    //                              autotable: false
                    //                        },
                    //                      formats:['pdf']
                    //                });
                    $('.pvtTable caption').css('text-align', 'left');
                    $('.pvtTable caption button').text('Export to Excel');
                    $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                    $('<input disabled type="button" id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                    $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                });

            });


            $('#divWait').hide();


            // groupedResults = groupByStatus(results)
            // 4. Create DOMs and attach them to HTML page.
            // buildDOMAndAttach(groupedResults);
        });
    }
    else if (project.length === 1) {
        if (project[0] == "All") {
            var i,
                results = [],
                deferred,
                deferreds = [];// 1. Make multiple AJAX calls to a Server
            $('#ddlCompany > option').each(function () {
                if (this.text != "All") {
                    CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + this.text + "')/GLE?$filter=Global_Dimension_1_Code ne '' and Posting_Date le " + dateTo;
                    deferred = $.ajax({
                        url: CompUrl,
                        type: "GET", //or POST?
                        dataType: "json",
                        beforeSend: function (request) {
                            AddToHeader(request);
                        },
                        success: function (result) {
                            // 2. Store the results in an array
                            var data = result.value;
                            var str = this.url;
                            var mySubString = str.substring(
                                str.lastIndexOf("(") + 2,
                                str.lastIndexOf(")") - 1
                            );

                            $.each(data, function (i, item) {

                                item.Translator = mySubString;
                            });

                            /* $.each(data, function (i, item) {
                                 
                                 item.Translator = $(this).url;
                             });*/
                            results.push(data);

                        }
                    });
                    deferreds.push(deferred);
                }
            });
            $.when.apply($, deferreds).then(function () {
                // 3. Process the result array.
                var Months = {
                    "01": "January",
                    "02": "Februaray",
                    "03": "March",
                    "04": "April",
                    "05": "May",
                    "06": "June",
                    "07": "July",
                    "08": "August",
                    "09": "September",
                    "10": "October",
                    "11": "November",
                    "12": "December"
                };
                var final;
                final = results.flat(1);
                globalData = final;
                $.each(final, function (i, item) {
                    //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                    item.G_L_Account_Name = item.G_L_Account_Name.trim();
                });
                var res = '';

                if (vend[0] === 'All') {
                    res = $.grep(final, function (n, i) {
                        return n.G_L_Account_No >= 50000;
                    });
                }
                else {
                    var filteredArray = final.filter(function (array_el) {
                        return vend.filter(function (anotherOne_el) {
                            return anotherOne_el == array_el.Vendor_Name;
                        }).length > 0
                    });

                    res = $.grep(filteredArray, function (n, i) {
                        return n.G_L_Account_No >= 50000;
                    });
                }
                var resITD = $.grep(res, function (n, i) {
                    return n.Description.indexOf("Close") < 0;
                });

                //        if (data1.value.length === 0) {

                //            var strFrom = prevdateFrom.toString();
                //            var strTo = prevdateTo.toString();

                //            if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                //item.Period = "Period From " + dateFrom + " To " + dateTo;
                //                res.push({ "Period": Months[strFrom.substring(5, 7)] + " " + strFrom.substring(0, 4) });

                //            }
                //            else {
                //                res.push({ "Period": "From " + prevdateFrom + " To " + prevdateTo });
                //            }
                //res.push({ "Period": "Period From " + prevdateFrom + " To " + prevdateTo });
                //      }

                $(function () {
                    var sum = $.pivotUtilities.aggregatorTemplates.sum;
                    var numberFormat = $.pivotUtilities.numberFormat;
                    var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                    $(function () {
                        $("#pivot").pivot(resITD,
                            {
                                rows: ["G_L_Account_No", "G_L_Account_Name"],
                                cols: ["Global_Dimension_1_Code"],
                                aggregator: sum(intFormat)(["Amount"]),
                                colOrder: "key_z_to_a"
                            }
                        );
                        var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                            //'<h2 >' + company + '</h2>' +
                            '<h3 >Profit and Loss</h3>' +
                            '<p>Period: ' + minDate(res) + '..' + $('#datepickerTo').val() + '</p>' +
                            '</div><br/><br/>';
                        $(Header).insertBefore('.pvtTable');
                        $('.pvtTable thead tr').eq(1).remove();
                        $('.pvtTable thead tr th:eq(1)').remove();
                        $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th>');

                        $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                        $('<th></th>').insertAfter($('.pvtTable thead tr th:eq(0)'));

                        $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(0)').text('Account Number');
                        $('.pvtTable thead tr th:eq(1)').text('Account Description');

                        //  $(".pvtTable tbody tr:last").prev().remove();
                        $('.pvtTable').ConvertHyperlinkProject();
                        $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                        $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                        $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                        $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                        $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                        $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                        $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                        var strrow1 = '<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th>';
                        var strrow2 = '<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th>';
                        var $td = $('.pvtTable tbody tr:last').find('td');
                        $td.each(function (i, ele) {

                            var Ttl = $('.pvtTable tbody tr:last td:eq(' + i + ')').text();
                            var int = parseInt(Ttl, 10);
                            if (int > 0) {
                                strrow1 += '<td> (' + Ttl + ') </td>';
                                strrow2 += '<td> (' + Ttl + ') </td>';
                            }
                            else {
                                strrow1 += '<td> ' + Ttl + ' </td>';
                                strrow2 += '<td> ' + Ttl + ' </td>';
                            }
                        });
                        $('.pvtTable tbody tr:last').after(strrow1);//'<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        $('.pvtTable tbody tr:last').after(strrow2);//<td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                        $('.pvtTable tbody tr').each(function () {
                            if ($(this).find("td:last-child a").text() == 0)
                                $(this).find("td:last-child a").text('-');
                        });



                        /* if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                             $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                         }*/
                        //                                $('#btnExport').css('display','block');
                        $('table').eq(1).tableExport({
                            type: 'excel',
                            filename: 'Profit & loss by month',
                            position: 'top',
                            formats: ['csv']
                        });

                        //                                $('table').eq(1).tableExport({
                        //                                  type: 'pdf',
                        //                                jspdf: {
                        //                                  orientation: 'p',
                        //                                margins: { left: 20, top: 10 },
                        //                              autotable: false
                        //                        },
                        //                      formats:['pdf']
                        //                });
                        $('.pvtTable caption').css('text-align', 'left');
                        $('.pvtTable caption button').text('Export to Excel');
                        $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                        $('<input disabled type="button" id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                        $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                    });

                });
                $('#divWait').hide();




                // groupedResults = groupByStatus(results)
                // 4. Create DOMs and attach them to HTML page.
                // buildDOMAndAttach(groupedResults);
            });



        }
        else {
            var i,
                results = [],
                deferred,
                deferreds = [];// 1. Make multiple AJAX calls to a Server
            $('#ddlCompany > option').each(function () {
                if (this.text != "All") {
                    CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + this.text + "')/GLE?$filter=Global_Dimension_1_Code ne '' and Posting_Date le " + dateTo;
                    deferred = $.ajax({
                        url: CompUrl,
                        type: "GET", //or POST?
                        dataType: "json",
                        beforeSend: function (request) {
                            AddToHeader(request);
                        },
                        success: function (result) {
                            // 2. Store the results in an array
                            var data = result.value;
                            var str = this.url;
                            var mySubString = str.substring(
                                str.lastIndexOf("(") + 2,
                                str.lastIndexOf(")") - 1
                            );

                            $.each(data, function (i, item) {

                                item.Translator = mySubString;
                            });

                            /* $.each(data, function (i, item) {
                                 
                                 item.Translator = $(this).url;
                             });*/
                            results.push(data);

                        }
                    });
                    deferreds.push(deferred);
                }
            });
            $.when.apply($, deferreds).then(function () {
                // 3. Process the result array.
                var Months = {
                    "01": "January",
                    "02": "Februaray",
                    "03": "March",
                    "04": "April",
                    "05": "May",
                    "06": "June",
                    "07": "July",
                    "08": "August",
                    "09": "September",
                    "10": "October",
                    "11": "November",
                    "12": "December"
                };
                var final;
                final = results.flat(1);
                globalData = final;
                $.each(final, function (i, item) {
                    //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                    item.G_L_Account_Name = item.G_L_Account_Name.trim();
                });

                final = $.grep(final, function (n, i) {
                    return n.Global_Dimension_1_Code == project[0];
                })
                var res = '';

                if (vend[0] === 'All') {
                    res = $.grep(final, function (n, i) {
                        return n.G_L_Account_No >= 50000;
                    });
                }
                else {
                    var filteredArray = final.filter(function (array_el) {
                        return vend.filter(function (anotherOne_el) {
                            return anotherOne_el == array_el.Vendor_Name;
                        }).length > 0
                    });

                    res = $.grep(filteredArray, function (n, i) {
                        return n.G_L_Account_No >= 50000;
                    });
                }
                var resITD = $.grep(res, function (n, i) {
                    return n.Description.indexOf("Close") < 0;
                });

                //        if (data1.value.length === 0) {

                //            var strFrom = prevdateFrom.toString();
                //            var strTo = prevdateTo.toString();

                //            if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                //item.Period = "Period From " + dateFrom + " To " + dateTo;
                //                res.push({ "Period": Months[strFrom.substring(5, 7)] + " " + strFrom.substring(0, 4) });

                //            }
                //            else {
                //                res.push({ "Period": "From " + prevdateFrom + " To " + prevdateTo });
                //            }
                //res.push({ "Period": "Period From " + prevdateFrom + " To " + prevdateTo });
                //      }

                $(function () {
                    var sum = $.pivotUtilities.aggregatorTemplates.sum;
                    var numberFormat = $.pivotUtilities.numberFormat;
                    var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                    $(function () {
                        $("#pivot").pivot(resITD,
                            {
                                rows: ["G_L_Account_No", "G_L_Account_Name"],
                                cols: ["Global_Dimension_1_Code"],
                                aggregator: sum(intFormat)(["Amount"]),
                                colOrder: "key_z_to_a"
                            }
                        );
                        var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                            //'<h2 >' + company + '</h2>' +
                            '<h3 >Profit and Loss</h3>' +
                            '<p>Period: ' + minDate(res) + '..' + $('#datepickerTo').val() + '</p>' +
                            '</div><br/><br/>';
                        $(Header).insertBefore('.pvtTable');
                        $('.pvtTable thead tr').eq(1).remove();
                        $('.pvtTable thead tr th:eq(1)').remove();
                        $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th>');

                        $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                        $('<th></th>').insertAfter($('.pvtTable thead tr th:eq(0)'));

                        $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(0)').text('Account Number');
                        $('.pvtTable thead tr th:eq(1)').text('Account Description');

                        //  $(".pvtTable tbody tr:last").prev().remove();
                        $('.pvtTable').ConvertHyperlinkProject();
                        $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                        $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                        $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                        $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                        $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                        $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                        $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                        var strrow1 = '<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th>';
                        var strrow2 = '<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th>';
                        var $td = $('.pvtTable tbody tr:last').find('td');
                        $td.each(function (i, ele) {

                            var Ttl = $('.pvtTable tbody tr:last td:eq(' + i + ')').text();
                            var int = parseInt(Ttl, 10);
                            if (int > 0) {
                                strrow1 += '<td> (' + Ttl + ') </td>';
                                strrow2 += '<td> (' + Ttl + ') </td>';
                            }
                            else {
                                strrow1 += '<td> ' + Ttl + ' </td>';
                                strrow2 += '<td> ' + Ttl + ' </td>';
                            }
                        });
                        $('.pvtTable tbody tr:last').after(strrow1);//'<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        $('.pvtTable tbody tr:last').after(strrow2);//<td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                        $('.pvtTable tbody tr').each(function () {
                            if ($(this).find("td:last-child a").text() == 0)
                                $(this).find("td:last-child a").text('-');
                        });



                        /* if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                             $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                         }*/
                        //                                $('#btnExport').css('display','block');
                        $('table').eq(1).tableExport({
                            type: 'excel',
                            filename: 'Profit & loss by month',
                            position: 'top',
                            formats: ['csv']
                        });

                        //                                $('table').eq(1).tableExport({
                        //                                  type: 'pdf',
                        //                                jspdf: {
                        //                                  orientation: 'p',
                        //                                margins: { left: 20, top: 10 },
                        //                              autotable: false
                        //                        },
                        //                      formats:['pdf']
                        //                });
                        $('.pvtTable caption').css('text-align', 'left');
                        $('.pvtTable caption button').text('Export to Excel');
                        $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                        $('<input disabled type="button" id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                        $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                    });

                });
                $('#divWait').hide();




                // groupedResults = groupByStatus(results)
                // 4. Create DOMs and attach them to HTML page.
                // buildDOMAndAttach(groupedResults);
            });



        }
    }
}

function PLCompanyYTD(company, vend) {
    var dateTo = new Date($('#datepickerTo').val()).yyyymmdd(true);
    var dateFrom = new Date($('#datepickerFrom').val()).yyyymmdd(true);
    if (company.length > 1) {
        var i,
            results = [],
            deferred,
            deferreds = [];// 1. Make multiple AJAX calls to a Server
        for (i = 0; i < company.length; ++i) {
            var CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + company[0] + "')/GLE?$filter=Posting_Date ge " + dateFrom + " and Posting_Date le " + dateTo;
            //CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + company[i] + "')/GLE";
            deferred = $.ajax({
                url: CompUrl,
                type: "GET", //or POST?
                dataType: "json",
                beforeSend: function (request) {
                    AddToHeader(request);
                },
                success: function (result) {
                    // 2. Store the results in an array
                    var data = result.value;
                    var str = this.url;
                    var mySubString = str.substring(
                        str.lastIndexOf("(") + 2,
                        str.lastIndexOf(")") - 1
                    );
                    $.each(data, function (i, item) {

                        item.Translator = mySubString;
                    });


                    /* $.each(data, function (i, item) {
                         
                         item.Translator = $(this).url;
                     });*/
                    results.push(data);

                }
            });
            deferreds.push(deferred);
        }
        $.when.apply($, deferreds).then(function () {
            // 3. Process the result array.
            var Months = {
                "01": "January",
                "02": "Februaray",
                "03": "March",
                "04": "April",
                "05": "May",
                "06": "June",
                "07": "July",
                "08": "August",
                "09": "September",
                "10": "October",
                "11": "November",
                "12": "December"
            };
            var final;
            final = results.flat(1);
            globalData = final;
            $.each(final, function (i, item) {
                //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                item.G_L_Account_Name = item.G_L_Account_Name.trim();
            });
            var res = '';

            if (vend[0] === 'All') {
                res = $.grep(final, function (n, i) {
                    return n.G_L_Account_No >= 50000;
                });
            }
            else {
                var filteredArray = final.filter(function (array_el) {
                    return vend.filter(function (anotherOne_el) {
                        return anotherOne_el == array_el.Vendor_Name;
                    }).length > 0
                });

                res = $.grep(filteredArray, function (n, i) {
                    return n.G_L_Account_No >= 50000;
                });
            }
            var resYTD = $.grep(res, function (n, i) {
                return n.Description.indexOf("Close") < 0;
            });

            $(function () {
                var sum = $.pivotUtilities.aggregatorTemplates.sum;
                var numberFormat = $.pivotUtilities.numberFormat;
                var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                $(function () {
                    $("#pivot").pivot(resYTD,
                        {
                            rows: ["G_L_Account_No", "G_L_Account_Name"],
                            cols: ["Period"],
                            aggregator: sum(intFormat)(["Amount"]),
                            colOrder: "key_z_to_a"
                        }
                    );
                    var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                        '<h2 >' + company + '</h2>' +
                        '<h3 >Profit and Loss</h3>' +
                        '<p>Period: ' + minDate(res) + '..' + $('#datepickerTo').val() + '</p>' +
                        '</div><br/><br/>';
                    $(Header).insertBefore('.pvtTable');
                    $('.pvtTable thead tr').eq(1).remove();
                    $('.pvtTable thead tr th:eq(1)').remove();
                    $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th><th></th>');
                    $(".pvtTable th:last-child, .pvtTable td:last-child").remove();
                    $('.pvtTable').switchColumns(0, 1);

                    $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(0)').text('Account Number');
                    $('.pvtTable thead tr th:eq(1)').text('Account Description');
                    $('.pvtTable thead tr th:eq(2)').text('Amount');




                    //  $(".pvtTable tbody tr:last").prev().remove();
                    $('.pvtTable').ConvertHyperlink();
                    $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                    $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                    $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                    $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                    $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                    $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                    $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                    $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                    var Ttl = $('.pvtTable tbody tr:last td:eq(0)').text();
                    var int = parseInt(Ttl, 10);
                    if (int > 0) {
                        $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td> (' + Ttl + ') </td>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> (' + Ttl + ') </td>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                    }
                    else {

                        $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td> ' + Ttl + '</td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> ' + Ttl + ' </td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                    }

                    $('.pvtTable tbody tr').each(function () {
                        if ($(this).find("td:last-child a").text() == 0)
                            $(this).find("td:last-child a").text('-');
                    });



                    //                                $('#btnExport').css('display','block');
                    $('table').eq(1).tableExport({
                        type: 'excel',
                        filename: 'Profit & loss by month',
                        position: 'top',
                        formats: ['csv']
                    });

                    //                                $('table').eq(1).tableExport({
                    //                                  type: 'pdf',
                    //                                jspdf: {
                    //                                  orientation: 'p',
                    //                                margins: { left: 20, top: 10 },
                    //                              autotable: false
                    //                        },
                    //                      formats:['pdf']
                    //                });
                    $('.pvtTable caption').css('text-align', 'left');
                    $('.pvtTable caption button').text('Export');
                    $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                    $('<input type="button" id="btnExportpdf" value="Export pdf" />').insertAfter('.pvtTable caption button');
                    $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                });
            });
            $('#divWait').hide();
            // groupedResults = groupByStatus(results)
            // 4. Create DOMs and attach them to HTML page.
            // buildDOMAndAttach(groupedResults);
        });
    }
    else if (company.length === 1) {
        if (company[0] == "All") {
            var i,
                results = [],
                deferred,
                deferreds = [];// 1. Make multiple AJAX calls to a Server
            $('#ddlCompany > option').each(function () {
                if (this.text != "All") {

                    for (i = 0; i < company.length; ++i) {
                        var CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + this.text + "')/GLE?$filter=Posting_Date ge " + dateFrom + " and Posting_Date le " + dateTo;
                        //CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + company[i] + "')/GLE";
                        deferred = $.ajax({
                            url: CompUrl,
                            type: "GET", //or POST?
                            dataType: "json",
                            beforeSend: function (request) {
                                AddToHeader(request);
                            },
                            success: function (result) {
                                // 2. Store the results in an array
                                var data = result.value;
                                var str = this.url;
                                var mySubString = str.substring(
                                    str.lastIndexOf("(") + 2,
                                    str.lastIndexOf(")") - 1
                                );
                                $.each(data, function (i, item) {

                                    item.Translator = mySubString;
                                });
                                /* $.each(data, function (i, item) {
                                     
                                     item.Translator = $(this).url;
                                 });*/
                                results.push(data);
                            }
                        });
                        deferreds.push(deferred);
                    }
                }
            });
            $.when.apply($, deferreds).then(function () {
                // 3. Process the result array.
                var Months = {
                    "01": "January",
                    "02": "Februaray",
                    "03": "March",
                    "04": "April",
                    "05": "May",
                    "06": "June",
                    "07": "July",
                    "08": "August",
                    "09": "September",
                    "10": "October",
                    "11": "November",
                    "12": "December"
                };
                var final;
                final = results.flat(1);
                $.each(final, function (i, item) {
                    //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                    item.G_L_Account_Name = item.G_L_Account_Name.trim();
                });
                var res = '';

                if (vend[0] === 'All') {
                    res = $.grep(final, function (n, i) {
                        return n.G_L_Account_No >= 50000;
                    });
                }
                else {
                    var filteredArray = final.filter(function (array_el) {
                        return vend.filter(function (anotherOne_el) {
                            return anotherOne_el == array_el.Vendor_Name;
                        }).length > 0
                    });

                    res = $.grep(filteredArray, function (n, i) {
                        return n.G_L_Account_No >= 50000;
                    });
                }
                var resYTD = $.grep(res, function (n, i) {
                    return n.Description.indexOf("Close") < 0;
                });
                $(function () {
                    var sum = $.pivotUtilities.aggregatorTemplates.sum;
                    var numberFormat = $.pivotUtilities.numberFormat;
                    var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                    $(function () {
                        $("#pivot").pivot(resYTD,
                            {
                                rows: ["G_L_Account_No", "G_L_Account_Name"],
                                cols: ["Period"],
                                aggregator: sum(intFormat)(["Amount"]),
                                colOrder: "key_z_to_a"
                            }
                        );
                        var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                            '<h2 >' + company + '</h2>' +
                            '<h3 >Profit and Loss</h3>' +
                            '<p>Period: ' + minDate(res) + '..' + $('#datepickerTo').val() + '</p>' +
                            '</div><br/><br/>';
                        $(Header).insertBefore('.pvtTable');
                        $('.pvtTable thead tr').eq(1).remove();
                        $('.pvtTable thead tr th:eq(1)').remove();
                        $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th><th></th>');
                        $(".pvtTable th:last-child, .pvtTable td:last-child").remove();
                        $('.pvtTable').switchColumns(0, 1);

                        $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(0)').text('Account Number');
                        $('.pvtTable thead tr th:eq(1)').text('Account Description');
                        $('.pvtTable thead tr th:eq(2)').text('Amount');

                        //  $(".pvtTable tbody tr:last").prev().remove();
                        $('.pvtTable').ConvertHyperlink();
                        $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                        $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                        $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                        $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                        $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                        $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                        $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                        var Ttl = $('.pvtTable tbody tr:last td:eq(0)').text();
                        var int = parseInt(Ttl, 10);
                        if (int > 0) {
                            $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td> (' + Ttl + ') </td>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                            $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> (' + Ttl + ') </td>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        }
                        else {

                            $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td> ' + Ttl + ' </td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                            $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> ' + Ttl + ' </td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        }

                        $('.pvtTable tbody tr').each(function () {
                            if ($(this).find("td:last-child a").text() == 0)
                                $(this).find("td:last-child a").text('-');
                        });



                        //                                $('#btnExport').css('display','block');
                        $('table').eq(1).tableExport({
                            type: 'excel',
                            filename: 'Profit & loss by month',
                            position: 'top',
                            formats: ['csv']
                        });

                        //                                $('table').eq(1).tableExport({
                        //                                  type: 'pdf',
                        //                                jspdf: {
                        //                                  orientation: 'p',
                        //                                margins: { left: 20, top: 10 },
                        //                              autotable: false
                        //                        },
                        //                      formats:['pdf']
                        //                });
                        $('.pvtTable caption').css('text-align', 'left');
                        $('.pvtTable caption button').text('Export');
                        $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                        $('<input type="button" id="btnExportpdf" value="Export pdf" />').insertAfter('.pvtTable caption button');
                        $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                    });
                });
                $('#divWait').hide();
                // groupedResults = groupByStatus(results)
                // 4. Create DOMs and attach them to HTML page.
                // buildDOMAndAttach(groupedResults);
            });
        }
        else {
            var CurrPnLURL = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + company[0] + "')/GLE?$filter=Posting_Date ge " + dateFrom + " and Posting_Date le " + dateTo;
            $.ajax({
                url: CurrPnLURL,
                type: "GET", //or POST?
                dataType: "json",
                beforeSend: function (request) {
                    AddToHeader(request);
                },
                success: function (data) {
                    /*$.ajax({
                        url: PrevPnLURL,
                        type: "GET", //or POST?
                        dataType: "json",
                        beforeSend: function (request) {
                            AddToHeader(request);
                        },
                        success: function (data1) {*/
                    var final = data.value;//.concat(data1.value);
                    var str = this.url;
                    var mySubString = str.substring(
                        str.lastIndexOf("(") + 2,
                        str.lastIndexOf(")") - 1
                    );
                    $.each(final, function (i, item) {

                        item.Translator = mySubString;
                    });

                    globalData = final;

                    var Months = {
                        "01": "January",
                        "02": "Februaray",
                        "03": "March",
                        "04": "April",
                        "05": "May",
                        "06": "June",
                        "07": "July",
                        "08": "August",
                        "09": "September",
                        "10": "October",
                        "11": "November",
                        "12": "December"
                    };
                    $.each(final, function (i, item) {
                        //                            var strFrom = dateFrom.toString();
                        //                            var strTo = dateTo.toString();

                        //                            if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                        //                                //item.Period = "Period From " + dateFrom + " To " + dateTo;
                        //                                item.Period = Months[strFrom.substring(5, 7)] + " 2020";

                        //                            }
                        //                            else {
                        //                                item.Period = "From " + dateFrom + " To " + dateTo;
                        //                            }
                        //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                        item.G_L_Account_Name = item.G_L_Account_Name.trim();
                    });
                    var resYTD = '';
                    if (vend[0] === 'All') {
                        resYTD = $.grep(final, function (n, i) {
                            return n.G_L_Account_No >= 50000;
                        });
                    }
                    else {
                        var filteredArray = final.filter(function (array_el) {
                            return vend.filter(function (anotherOne_el) {
                                return anotherOne_el == array_el.Vendor_Name;
                            }).length > 0
                        });

                        resYTD = $.grep(filteredArray, function (n, i) {
                            return n.G_L_Account_No >= 50000;
                        });
                    }

                    var resYTD = $.grep(resYTD, function (n, i) {
                        return n.Description.indexOf("Close") < 0;
                    });


                    /*-                        if (data1.value.length === 0) {
                    
                                                var strFrom = prevdateFrom.toString();
                                                var strTo = prevdateTo.toString();
                    
                                                if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                                                    //item.Period = "Period From " + dateFrom + " To " + dateTo;
                                                    res.push({ "Period": Months[strFrom.substring(5, 7)] + " " + strFrom.substring(0, 4) });
                    
                                                }
                                                else {
                                                    res.push({ "Period": "From " + prevdateFrom + " To " + prevdateTo });
                                                }
                                                //res.push({ "Period": "Period From " + prevdateFrom + " To " + prevdateTo });
                                            }*/

                    $(function () {
                        var sum = $.pivotUtilities.aggregatorTemplates.sum;
                        var numberFormat = $.pivotUtilities.numberFormat;
                        var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                        $(function () {
                            $("#pivot").pivot(resYTD,
                                {
                                    rows: ["G_L_Account_No", "G_L_Account_Name"],
                                    cols: ["Period"],
                                    aggregator: sum(intFormat)(["Amount"]),
                                    colOrder: "key_z_to_a"
                                }
                            );
                            var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                                '<h2 >' + company[0] + '</h2>' +
                                '<h3 >Profit and Loss</h3>' +
                                '<p>Period: ' + $('#datepickerFrom').val() + '..' + $('#datepickerTo').val() + '</p>' +
                                '</div><br/><br/>';
                            $(Header).insertBefore('.pvtTable');
                            $('.pvtTable thead tr').eq(1).remove();
                            $('.pvtTable thead tr th:eq(1)').remove();
                            $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th><th></th>');
                            $(".pvtTable th:last-child, .pvtTable td:last-child").remove();
                            $('.pvtTable').switchColumns(0, 1);

                            $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(0)').text('Account Number');
                            $('.pvtTable thead tr th:eq(1)').text('Account Description');
                            $('.pvtTable thead tr th:eq(2)').text('Amount');


                            //$(".pvtTable tbody tr:last").prev().remove();
                            $('.pvtTable').ConvertHyperlink();
                            $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                            $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                            $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                            $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                            $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                            $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                            $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                            var Ttl = $('.pvtTable tbody tr:last td:eq(0)').text();
                            var int = parseInt(Ttl, 10);
                            if (int > 0) {
                                $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td> (' + Ttl + ') </td>');
                                $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                                $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> (' + Ttl + ') </td>');
                                $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                            }
                            else {

                                $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td> ' + Ttl + ' </td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                                $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                                $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> ' + Ttl + ' </td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                                $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                            }

                            $('.pvtTable tbody tr').each(function () {
                                if ($(this).find("td:last-child a").text() == 0)
                                    $(this).find("td:last-child a").text('-');
                            });
                            if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                                $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                            }
                            //                                $('#btnExport').css('display','block');
                            $('table').eq(1).tableExport({
                                type: 'excel',
                                filename: 'Profit & loss by month',
                                position: 'top',
                                formats: ['csv']
                            });

                            //                                $('table').eq(1).tableExport({
                            //                                  type: 'pdf',
                            //                                jspdf: {
                            //                                  orientation: 'p',
                            //                                margins: { left: 20, top: 10 },
                            //                              autotable: false
                            //                        },
                            //                      formats:['pdf']
                            //                });
                            $('.pvtTable caption').css('text-align', 'left');
                            $('.pvtTable caption button').text('Export to Excel');
                            $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                            $('<input type="button" disabled id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                            $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                        });
                    });
                    $('#divWait').hide();
                },
                error: function () {
                    alert("error");
                }
            });
            /*},
     
            error: function () { alert("error") }
        })*/
        }
    }
}

function PLProjectYTD(project, vend) {
    var dateTo = new Date($('#datepickerTo').val()).yyyymmdd(true);
    var dateFrom = new Date($('#datepickerFrom').val()).yyyymmdd(true);

    if (project.length > 1) {
        var i,
            results = [],
            deferred,
            deferreds = [];// 1. Make multiple AJAX calls to a Server
        $('#ddlCompany > option').each(function () {
            if (this.text != "All") {
                CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + this.text + "')/GLE?$filter=Global_Dimension_1_Code ne '' and Posting_Date ge " + dateFrom + " and Posting_Date le " + dateTo;
                deferred = $.ajax({
                    url: CompUrl,
                    type: "GET", //or POST?
                    dataType: "json",
                    beforeSend: function (request) {
                        AddToHeader(request);
                    },
                    success: function (result) {
                        // 2. Store the results in an array
                        var data = result.value;
                        var str = this.url;
                        var mySubString = str.substring(
                            str.lastIndexOf("(") + 2,
                            str.lastIndexOf(")") - 1
                        );

                        $.each(data, function (i, item) {

                            item.Translator = mySubString;
                        });

                        /* $.each(data, function (i, item) {
                             
                             item.Translator = $(this).url;
                         });*/
                        results.push(data);

                    }
                });
                deferreds.push(deferred);
            }
        });
        $.when.apply($, deferreds).then(function () {
            // 3. Process the result array.
            var Months = {
                "01": "January",
                "02": "Februaray",
                "03": "March",
                "04": "April",
                "05": "May",
                "06": "June",
                "07": "July",
                "08": "August",
                "09": "September",
                "10": "October",
                "11": "November",
                "12": "December"
            };
            var final;
            final = results.flat(1);
            if (final.length > 0) {
                globalData = final;
                $.each(final, function (i, item) {
                    //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                    item.G_L_Account_Name = item.G_L_Account_Name.trim();
                });

                var res = '';

                var final1 = final.filter(function (array_el) {
                    return project.filter(function (anotherOne_el) {
                        return anotherOne_el == array_el.Global_Dimension_1_Code;
                    }).length > 0
                });

                if (vend[0] === 'All') {
                    res = $.grep(final1, function (n, i) {
                        return n.G_L_Account_No >= 50000;
                    });
                }
                else {
                    var filteredArray = final1.filter(function (array_el) {
                        return vend.filter(function (anotherOne_el) {
                            return anotherOne_el == array_el.Vendor_Name;
                        }).length > 0
                    });

                    res = $.grep(filteredArray, function (n, i) {
                        return n.G_L_Account_No >= 50000;
                    });
                }
                var resYTD = $.grep(res, function (n, i) {
                    return n.Description.indexOf("Close") < 0;
                });
                //        if (data1.value.length === 0) {

                //            var strFrom = prevdateFrom.toString();
                //            var strTo = prevdateTo.toString();

                //            if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                //item.Period = "Period From " + dateFrom + " To " + dateTo;
                //                res.push({ "Period": Months[strFrom.substring(5, 7)] + " " + strFrom.substring(0, 4) });

                //            }
                //            else {
                //                res.push({ "Period": "From " + prevdateFrom + " To " + prevdateTo });
                //            }
                //res.push({ "Period": "Period From " + prevdateFrom + " To " + prevdateTo });
                //      }

                $(function () {
                    var sum = $.pivotUtilities.aggregatorTemplates.sum;
                    var numberFormat = $.pivotUtilities.numberFormat;
                    var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                    $(function () {
                        $("#pivot").pivot(resYTD,
                            {
                                rows: ["G_L_Account_No", "G_L_Account_Name"],
                                cols: ["Global_Dimension_1_Code"],
                                aggregator: sum(intFormat)(["Amount"]),
                                colOrder: "key_z_to_a"
                            }
                        );
                        var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                            //'<h2 >' + company + '</h2>' +
                            '<h3 >Profit and Loss</h3>' +
                            '<p>Period: ' + minDate(res) + '..' + $('#datepickerTo').val() + '</p>' +
                            '</div><br/><br/>';
                        $(Header).insertBefore('.pvtTable');
                        $('.pvtTable thead tr').eq(1).remove();
                        $('.pvtTable thead tr th:eq(1)').remove();
                        $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th>');

                        $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                        $('<th></th>').insertAfter($('.pvtTable thead tr th:eq(0)'));

                        $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(0)').text('Account Number');
                        $('.pvtTable thead tr th:eq(1)').text('Account Description');

                        //  $(".pvtTable tbody tr:last").prev().remove();
                        $('.pvtTable').ConvertHyperlinkProject();
                        $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                        $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                        $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                        $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                        $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                        $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                        $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                        var strrow1 = '<tr><th class="pvtTotalLabel pvtColTotalLabel">Net Operating Income</th><th></th>>';
                        var strrow2 = '<tr><th class="pvtTotalLabel pvtColTotalLabel">Net Income</th><th></th>';
                        var $td = $('.pvtTable tbody tr:last').find('td');
                        $td.each(function (i, ele) {

                            var Ttl = $('.pvtTable tbody tr:last td:eq(' + i + ')').text();
                            var int = parseInt(Ttl, 10);
                            if (int > 0) {
                                strrow1 += '<td> (' + Ttl + ') </td>';
                                strrow2 += '<td> (' + Ttl + ') </td>';
                            }
                            else {
                                strrow1 += '<td> ' + Ttl + ' </td>';
                                strrow2 += '<td> ' + Ttl + ' </td>';
                            }
                        });
                        $('.pvtTable tbody tr:last').after(strrow1);//'<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        $('.pvtTable tbody tr:last').after(strrow2);//<td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                        $('.pvtTable tbody tr').each(function () {
                            if ($(this).find("td:last-child a").text() == 0)
                                $(this).find("td:last-child a").text('-');
                        });



                        /* if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                             $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                         }*/
                        //                                $('#btnExport').css('display','block');
                        $('table').eq(1).tableExport({
                            type: 'excel',
                            filename: 'Profit & loss by month',
                            position: 'top',
                            formats: ['csv']
                        });

                        //                                $('table').eq(1).tableExport({
                        //                                  type: 'pdf',
                        //                                jspdf: {
                        //                                  orientation: 'p',
                        //                                margins: { left: 20, top: 10 },
                        //                              autotable: false
                        //                        },
                        //                      formats:['pdf']
                        //                });
                        $('.pvtTable caption').css('text-align', 'left');
                        $('.pvtTable caption button').text('Export to Excel');
                        $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                        $('<input disabled type="button" id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                        $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                    });

                });

            }
            else {
                $("#pivot").empty();
                var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                    //                            '<h2 >' + company[0] + '</h2>' +
                    '<h3 >Profit and Loss</h3>' +
                    '<p>Period: ' + $('#datepickerFrom').val() + '..' + $('#datepickerTo').val() + '</p>' +
                    '</div><br/><br/>' +
                    'Entries not found';
                $("#pivot").append(Header);
            }


            $('#divWait').hide();
            // groupedResults = groupByStatus(results)
            // 4. Create DOMs and attach them to HTML page.
            // buildDOMAndAttach(groupedResults);
        });
    }
    else if (project.length === 1) {
        if (project[0] == "All") {
            var i,
                results = [],
                deferred,
                deferreds = [];// 1. Make multiple AJAX calls to a Server
            $('#ddlCompany > option').each(function () {
                if (this.text != "All") {
                    CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + this.text + "')/GLE?$filter=Global_Dimension_1_Code ne '' and Posting_Date ge " + dateFrom + " and Posting_Date le " + dateTo;
                    deferred = $.ajax({
                        url: CompUrl,
                        type: "GET", //or POST?
                        dataType: "json",
                        beforeSend: function (request) {
                            AddToHeader(request);
                        },
                        success: function (result) {
                            // 2. Store the results in an array
                            var data = result.value;
                            var str = this.url;
                            var mySubString = str.substring(
                                str.lastIndexOf("(") + 2,
                                str.lastIndexOf(")") - 1
                            );

                            $.each(data, function (i, item) {

                                item.Translator = mySubString;
                            });

                            /* $.each(data, function (i, item) {
                                 
                                 item.Translator = $(this).url;
                             });*/
                            results.push(data);

                        }
                    });
                    deferreds.push(deferred);
                }
            });
            $.when.apply($, deferreds).then(function () {
                // 3. Process the result array.
                var Months = {
                    "01": "January",
                    "02": "Februaray",
                    "03": "March",
                    "04": "April",
                    "05": "May",
                    "06": "June",
                    "07": "July",
                    "08": "August",
                    "09": "September",
                    "10": "October",
                    "11": "November",
                    "12": "December"
                };
                var final;
                final = results.flat(1);
                if (final.length > 0) {
                    globalData = final;
                    $.each(final, function (i, item) {
                        //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                        item.G_L_Account_Name = item.G_L_Account_Name.trim();
                    });
                    var res = '';

                    if (vend[0] === 'All') {
                        res = $.grep(final, function (n, i) {
                            return n.G_L_Account_No >= 50000;
                        });
                    }
                    else {
                        var filteredArray = final.filter(function (array_el) {
                            return vend.filter(function (anotherOne_el) {
                                return anotherOne_el == array_el.Vendor_Name;
                            }).length > 0
                        });

                        res = $.grep(filteredArray, function (n, i) {
                            return n.G_L_Account_No >= 50000;
                        });
                    }
                    var resYTD = $.grep(res, function (n, i) {
                        return n.Description.indexOf("Close") < 0;
                    });

                    //        if (data1.value.length === 0) {

                    //            var strFrom = prevdateFrom.toString();
                    //            var strTo = prevdateTo.toString();

                    //            if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                    //item.Period = "Period From " + dateFrom + " To " + dateTo;
                    //                res.push({ "Period": Months[strFrom.substring(5, 7)] + " " + strFrom.substring(0, 4) });

                    //            }
                    //            else {
                    //                res.push({ "Period": "From " + prevdateFrom + " To " + prevdateTo });
                    //            }
                    //res.push({ "Period": "Period From " + prevdateFrom + " To " + prevdateTo });
                    //      }

                    $(function () {
                        var sum = $.pivotUtilities.aggregatorTemplates.sum;
                        var numberFormat = $.pivotUtilities.numberFormat;
                        var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                        $(function () {
                            $("#pivot").pivot(resYTD,
                                {
                                    rows: ["G_L_Account_No", "G_L_Account_Name"],
                                    cols: ["Global_Dimension_1_Code"],
                                    aggregator: sum(intFormat)(["Amount"]),
                                    colOrder: "key_z_to_a"
                                }
                            );
                            var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                                //'<h2 >' + company + '</h2>' +
                                '<h3 >Profit and Loss</h3>' +
                                '<p>Period: ' + minDate(res) + '..' + $('#datepickerTo').val() + '</p>' +
                                '</div><br/><br/>';
                            $(Header).insertBefore('.pvtTable');
                            $('.pvtTable thead tr').eq(1).remove();
                            $('.pvtTable thead tr th:eq(1)').remove();
                            $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th>');

                            $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                            $('<th></th>').insertAfter($('.pvtTable thead tr th:eq(0)'));

                            $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(0)').text('Account Number');
                            $('.pvtTable thead tr th:eq(1)').text('Account Description');

                            //  $(".pvtTable tbody tr:last").prev().remove();
                            $('.pvtTable').ConvertHyperlinkProject();
                            $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                            $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                            $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                            $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                            $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                            $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                            $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                            var strrow1 = '<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th>';
                            var strrow2 = '<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th>';
                            var $td = $('.pvtTable tbody tr:last').find('td');
                            $td.each(function (i, ele) {

                                var Ttl = $('.pvtTable tbody tr:last td:eq(' + i + ')').text();
                                var int = parseInt(Ttl, 10);
                                if (int > 0) {
                                    strrow1 += '<td> (' + Ttl + ') </td>';
                                    strrow2 += '<td> (' + Ttl + ') </td>';
                                }
                                else {
                                    strrow1 += '<td> ' + Ttl + ' </td>';
                                    strrow2 += '<td> ' + Ttl + ' </td>';
                                }
                            });
                            $('.pvtTable tbody tr:last').after(strrow1);//'<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                            $('.pvtTable tbody tr:last').after(strrow2);//<td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                            $('.pvtTable tbody tr').each(function () {
                                if ($(this).find("td:last-child a").text() == 0)
                                    $(this).find("td:last-child a").text('-');
                            });



                            /* if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                                 $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                             }*/
                            //                                $('#btnExport').css('display','block');
                            $('table').eq(1).tableExport({
                                type: 'excel',
                                filename: 'Profit & loss by month',
                                position: 'top',
                                formats: ['csv']
                            });

                            //                                $('table').eq(1).tableExport({
                            //                                  type: 'pdf',
                            //                                jspdf: {
                            //                                  orientation: 'p',
                            //                                margins: { left: 20, top: 10 },
                            //                              autotable: false
                            //                        },
                            //                      formats:['pdf']
                            //                });
                            $('.pvtTable caption').css('text-align', 'left');
                            $('.pvtTable caption button').text('Export to Excel');
                            $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                            $('<input disabled type="button" id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                            $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                        });

                    });
                }
                else {
                    $("#pivot").empty();
                    var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                        //'<h2 >' + company[0] + '</h2>' +
                        '<h3 >Profit and Loss</h3>' +
                        '<p>Period: ' + $('#datepickerFrom').val() + '..' + $('#datepickerTo').val() + '</p>' +
                        '</div><br/><br/>' +
                        'Entries not found';
                    $("#pivot").append(Header);
                }


                $('#divWait').hide();

                // groupedResults = groupByStatus(results)
                // 4. Create DOMs and attach them to HTML page.
                // buildDOMAndAttach(groupedResults);
            });



        }
        else {
            var i,
                results = [],
                deferred,
                deferreds = [];// 1. Make multiple AJAX calls to a Server
            $('#ddlCompany > option').each(function () {
                if (this.text != "All") {
                    CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + this.text + "')/GLE?$filter=Global_Dimension_1_Code ne '' and Posting_Date ge " + dateFrom + " and Posting_Date le " + dateTo;
                    deferred = $.ajax({
                        url: CompUrl,
                        type: "GET", //or POST?
                        dataType: "json",
                        beforeSend: function (request) {
                            AddToHeader(request);
                        },
                        success: function (result) {
                            // 2. Store the results in an array
                            var data = result.value;
                            var str = this.url;
                            var mySubString = str.substring(
                                str.lastIndexOf("(") + 2,
                                str.lastIndexOf(")") - 1
                            );

                            $.each(data, function (i, item) {

                                item.Translator = mySubString;
                            });

                            /* $.each(data, function (i, item) {
                                 
                                 item.Translator = $(this).url;
                             });*/
                            results.push(data);

                        }
                    });
                    deferreds.push(deferred);
                }
            });
            $.when.apply($, deferreds).then(function () {
                // 3. Process the result array.
                var Months = {
                    "01": "January",
                    "02": "Februaray",
                    "03": "March",
                    "04": "April",
                    "05": "May",
                    "06": "June",
                    "07": "July",
                    "08": "August",
                    "09": "September",
                    "10": "October",
                    "11": "November",
                    "12": "December"
                };
                console.log(results);
                var final;
                final = results.flat(1);
                if (final.length > 0) {
                    globalData = final;
                    $.each(final, function (i, item) {
                        //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                        item.G_L_Account_Name = item.G_L_Account_Name.trim();
                    });

                    final = $.grep(final, function (n, i) {
                        return n.Global_Dimension_1_Code == project[0];
                    })
                    var res = '';

                    if (vend[0] === 'All') {
                        res = $.grep(final, function (n, i) {
                            return n.G_L_Account_No >= 50000;
                        });
                    }
                    else {
                        var filteredArray = final.filter(function (array_el) {
                            return vend.filter(function (anotherOne_el) {
                                return anotherOne_el == array_el.Vendor_Name;
                            }).length > 0
                        });

                        res = $.grep(filteredArray, function (n, i) {
                            return n.G_L_Account_No >= 50000;
                        });
                    }
                    var resYTD = $.grep(res, function (n, i) {
                        return n.Description.indexOf("Close") < 0;
                    });

                    //        if (data1.value.length === 0) {

                    //            var strFrom = prevdateFrom.toString();
                    //            var strTo = prevdateTo.toString();

                    //            if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                    //item.Period = "Period From " + dateFrom + " To " + dateTo;
                    //                res.push({ "Period": Months[strFrom.substring(5, 7)] + " " + strFrom.substring(0, 4) });

                    //            }
                    //            else {
                    //                res.push({ "Period": "From " + prevdateFrom + " To " + prevdateTo });
                    //            }
                    //res.push({ "Period": "Period From " + prevdateFrom + " To " + prevdateTo });
                    //      }

                    $(function () {
                        var sum = $.pivotUtilities.aggregatorTemplates.sum;
                        var numberFormat = $.pivotUtilities.numberFormat;
                        var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                        $(function () {
                            $("#pivot").pivot(resYTD,
                                {
                                    rows: ["G_L_Account_No", "G_L_Account_Name"],
                                    cols: ["Global_Dimension_1_Code"],
                                    aggregator: sum(intFormat)(["Amount"]),
                                    colOrder: "key_z_to_a"
                                }
                            );
                            var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                                //'<h2 >' + company + '</h2>' +
                                '<h3 >Profit and Loss</h3>' +
                                '<p>Period: ' + minDate(res) + '..' + $('#datepickerTo').val() + '</p>' +
                                '</div><br/><br/>';
                            $(Header).insertBefore('.pvtTable');
                            $('.pvtTable thead tr').eq(1).remove();
                            $('.pvtTable thead tr th:eq(1)').remove();
                            $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th>');

                            $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                            $('<th></th>').insertAfter($('.pvtTable thead tr th:eq(0)'));

                            $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(0)').text('Account Number');
                            $('.pvtTable thead tr th:eq(1)').text('Account Description');

                            //  $(".pvtTable tbody tr:last").prev().remove();
                            $('.pvtTable').ConvertHyperlinkProject();
                            $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                            $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                            $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                            $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                            $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                            $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                            $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                            var strrow1 = '<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th>';
                            var strrow2 = '<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th>';
                            var $td = $('.pvtTable tbody tr:last').find('td');
                            $td.each(function (i, ele) {

                                var Ttl = $('.pvtTable tbody tr:last td:eq(' + i + ')').text();
                                var int = parseInt(Ttl, 10);
                                if (int > 0) {
                                    strrow1 += '<td> (' + Ttl + ') </td>';
                                    strrow2 += '<td> (' + Ttl + ') </td>';
                                }
                                else {
                                    strrow1 += '<td> ' + Ttl + ' </td>';
                                    strrow2 += '<td> ' + Ttl + ' </td>';
                                }
                            });
                            $('.pvtTable tbody tr:last').after(strrow1);//'<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                            $('.pvtTable tbody tr:last').after(strrow2);//<td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                            $('.pvtTable tbody tr').each(function () {
                                if ($(this).find("td:last-child a").text() == 0)
                                    $(this).find("td:last-child a").text('-');
                            });



                            /* if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                                 $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                             }*/
                            //                                $('#btnExport').css('display','block');
                            $('table').eq(1).tableExport({
                                type: 'excel',
                                filename: 'Profit & loss by month',
                                position: 'top',
                                formats: ['csv']
                            });

                            //                                $('table').eq(1).tableExport({
                            //                                  type: 'pdf',
                            //                                jspdf: {
                            //                                  orientation: 'p',
                            //                                margins: { left: 20, top: 10 },
                            //                              autotable: false
                            //                        },
                            //                      formats:['pdf']
                            //                });
                            $('.pvtTable caption').css('text-align', 'left');
                            $('.pvtTable caption button').text('Export to Excel');
                            $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                            $('<input disabled type="button" id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                            $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                        });

                    });


                } else {
                    $("#pivot").empty();
                    var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                        //    '<h2 >' + company[0] + '</h2>' +
                        '<h3 >Profit and Loss</h3>' +
                        '<p>Period: ' + $('#datepickerFrom').val() + '..' + $('#datepickerTo').val() + '</p>' +
                        '</div><br/><br/>' +
                        'Entries not found';
                    $("#pivot").append(Header);
                }
                $('#divWait').hide();

                // groupedResults = groupByStatus(results)
                // 4. Create DOMs and attach them to HTML page.
                // buildDOMAndAttach(groupedResults);
            });
        }
    }
}

function PLCompanyPeriod(company, vend) {
    var dateTo = new Date($('#datepickerTo').val()).yyyymmdd(true);
    var dateFrom = new Date($('#datepickerFrom').val()).yyyymmdd(true);
    if (company.length > 1) {
        var i,
            results = [],
            deferred,
            deferreds = [];// 1. Make multiple AJAX calls to a Server
        for (i = 0; i < company.length; ++i) {

            CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + company[i] + "')/GLE?$filter=Posting_Date ge " + dateFrom + " and Posting_Date le " + dateTo;
            //CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + company[i] + "')/GLE";
            deferred = $.ajax({
                url: CompUrl,
                type: "GET", //or POST?
                dataType: "json",
                beforeSend: function (request) {
                    AddToHeader(request);
                },
                success: function (result) {
                    // 2. Store the results in an array
                    var data = result.value;
                    var str = this.url;
                    var mySubString = str.substring(
                        str.lastIndexOf("(") + 2,
                        str.lastIndexOf(")") - 1
                    );
                    $.each(data, function (i, item) {
                        item.Translator = mySubString;
                    });

                    /* $.each(data, function (i, item) {
                         
                         item.Translator = $(this).url;
                     });*/
                    results.push(data);

                }
            });
            deferreds.push(deferred);
        }
        $.when.apply($, deferreds).then(function () {
            // 3. Process the result array.
            var Months = {
                "01": "January",
                "02": "Februaray",
                "03": "March",
                "04": "April",
                "05": "May",
                "06": "June",
                "07": "July",
                "08": "August",
                "09": "September",
                "10": "October",
                "11": "November",
                "12": "December"
            };
            var final;
            final = results.flat(1);
            globalData = final;
            $.each(final, function (i, item) {
                //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                item.G_L_Account_Name = item.G_L_Account_Name.trim();
            });
            var res = '';

            if (vend[0] === 'All') {
                res = $.grep(final, function (n, i) {
                    return n.G_L_Account_No >= 50000;
                });
            }
            else {
                var filteredArray = final.filter(function (array_el) {
                    return vend.filter(function (anotherOne_el) {
                        return anotherOne_el == array_el.Vendor_Name;
                    }).length > 0
                });

                res = $.grep(filteredArray, function (n, i) {
                    return n.G_L_Account_No >= 50000;
                });
            }
            var resPeriod = $.grep(res, function (n, i) {
                return n.Description.indexOf("Close") < 0;
            });

            $(function () {
                var sum = $.pivotUtilities.aggregatorTemplates.sum;
                var numberFormat = $.pivotUtilities.numberFormat;
                var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                $(function () {
                    $("#pivot").pivot(resPeriod,
                        {
                            rows: ["G_L_Account_No", "G_L_Account_Name"],
                            cols: ["Period"],
                            aggregator: sum(intFormat)(["Amount"]),
                            colOrder: "key_z_to_a"
                        }
                    );
                    var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                        '<h2 >' + company + '</h2>' +
                        '<h3 >Profit and Loss</h3>' +
                        '<p>Period: ' + minDate(res) + '..' + $('#datepickerTo').val() + '</p>' +
                        '</div><br/><br/>';
                    $(Header).insertBefore('.pvtTable');
                    $('.pvtTable thead tr').eq(1).remove();
                    $('.pvtTable thead tr th:eq(1)').remove();
                    $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th><th></th>');
                    $(".pvtTable th:last-child, .pvtTable td:last-child").remove();
                    $('.pvtTable').switchColumns(0, 1);

                    $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(0)').text('Account Number');
                    $('.pvtTable thead tr th:eq(1)').text('Account Description');
                    $('.pvtTable thead tr th:eq(2)').text('Amount');




                    //  $(".pvtTable tbody tr:last").prev().remove();
                    $('.pvtTable').ConvertHyperlink();
                    $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                    $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                    $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                    $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                    $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                    $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                    $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                    $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                    var Ttl = $('.pvtTable tbody tr:last td:eq(0)').text();
                    var int = parseInt(Ttl, 10);
                    if (int > 0) {
                        $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td> (' + Ttl + ') </td>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> (' + Ttl + ') </td>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                    }
                    else {

                        $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td> ' + Ttl + ' </td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> ' + Ttl + ' </td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                    }

                    $('.pvtTable tbody tr').each(function () {
                        if ($(this).find("td:last-child a").text() == 0)
                            $(this).find("td:last-child a").text('-');
                    });



                    //                                $('#btnExport').css('display','block');
                    $('table').eq(1).tableExport({
                        type: 'excel',
                        filename: 'Profit & loss by month',
                        position: 'top',
                        formats: ['csv']
                    });

                    //                                $('table').eq(1).tableExport({
                    //                                  type: 'pdf',
                    //                                jspdf: {
                    //                                  orientation: 'p',
                    //                                margins: { left: 20, top: 10 },
                    //                              autotable: false
                    //                        },
                    //                      formats:['pdf']
                    //                });
                    $('.pvtTable caption').css('text-align', 'left');
                    $('.pvtTable caption button').text('Export');
                    $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                    $('<input type="button" id="btnExportpdf" value="Export pdf" />').insertAfter('.pvtTable caption button');
                    $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                });
            });
            $('#divWait').hide();
        });
    }
    else if (company.length === 1) {
        if (company[0] == "All") {
            var i,
                results = [],
                deferred,
                deferreds = [];// 1. Make multiple AJAX calls to a Server
            $('#ddlCompany > option').each(function () {
                if (this.text != "All") {

                    for (i = 0; i < company.length; ++i) {
                        var CurrPnLURL = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + this.text + "')/GLE?$filter=Posting_Date ge " + dateFrom + " and Posting_Date le " + dateTo;
                        //CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + company[i] + "')/GLE";
                        deferred = $.ajax({
                            url: CurrPnLURL,
                            type: "GET", //or POST?
                            dataType: "json",
                            beforeSend: function (request) {
                                AddToHeader(request);
                            },
                            success: function (result) {
                                // 2. Store the results in an array
                                var data = result.value;
                                var str = this.url;
                                var mySubString = str.substring(
                                    str.lastIndexOf("(") + 2,
                                    str.lastIndexOf(")") - 1
                                );
                                $.each(data, function (i, item) {

                                    item.Translator = mySubString;
                                });

                                /* $.each(data, function (i, item) {
                                     
                                     item.Translator = $(this).url;
                                 });*/
                                results.push(data);
                            }
                        });
                        deferreds.push(deferred);
                    }
                }
            });
            $.when.apply($, deferreds).then(function () {
                // 3. Process the result array.
                var Months = {
                    "01": "January",
                    "02": "Februaray",
                    "03": "March",
                    "04": "April",
                    "05": "May",
                    "06": "June",
                    "07": "July",
                    "08": "August",
                    "09": "September",
                    "10": "October",
                    "11": "November",
                    "12": "December"
                };
                var final;
                final = results.flat(1);
                globalData = final;
                $.each(final, function (i, item) {
                    //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                    item.G_L_Account_Name = item.G_L_Account_Name.trim();
                });
                var res = '';

                if (vend[0] === 'All') {
                    res = $.grep(final, function (n, i) {
                        return n.G_L_Account_No >= 50000;
                    });
                }
                else {
                    var filteredArray = final.filter(function (array_el) {
                        return vend.filter(function (anotherOne_el) {
                            return anotherOne_el == array_el.Vendor_Name;
                        }).length > 0
                    });

                    res = $.grep(filteredArray, function (n, i) {
                        return n.G_L_Account_No >= 50000;
                    });
                }
                var resPeriod = $.grep(res, function (n, i) {
                    return n.Description.indexOf("Close") < 0;
                });

                $(function () {
                    var sum = $.pivotUtilities.aggregatorTemplates.sum;
                    var numberFormat = $.pivotUtilities.numberFormat;
                    var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                    $(function () {
                        $("#pivot").pivot(resPeriod,
                            {
                                rows: ["G_L_Account_No", "G_L_Account_Name"],
                                cols: ["Period"],
                                aggregator: sum(intFormat)(["Amount"]),
                                colOrder: "key_z_to_a"
                            }
                        );
                        var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                            '<h2 >' + company + '</h2>' +
                            '<h3 >Profit and Loss</h3>' +
                            '<p>Period: ' + minDate(res) + '..' + $('#datepickerTo').val() + '</p>' +
                            '</div><br/><br/>';
                        $(Header).insertBefore('.pvtTable');
                        $('.pvtTable thead tr').eq(1).remove();
                        $('.pvtTable thead tr th:eq(1)').remove();
                        $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th><th></th>');
                        $(".pvtTable th:last-child, .pvtTable td:last-child").remove();
                        $('.pvtTable').switchColumns(0, 1);

                        $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(0)').text('Account Number');
                        $('.pvtTable thead tr th:eq(1)').text('Account Description');
                        $('.pvtTable thead tr th:eq(2)').text('Amount');




                        //  $(".pvtTable tbody tr:last").prev().remove();
                        $('.pvtTable').ConvertHyperlink();
                        $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                        $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                        $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                        $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                        $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                        $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                        $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                        var Ttl = $('.pvtTable tbody tr:last td:eq(0)').text();
                        var int = parseInt(Ttl, 10);
                        if (int > 0) {
                            $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td> (' + Ttl + ') </td>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                            $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> (' + Ttl + ') </td>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        }
                        else {

                            $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td> ' + Ttl + ' </td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                            $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> ' + Ttl + ' </td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        }

                        $('.pvtTable tbody tr').each(function () {
                            if ($(this).find("td:last-child a").text() == 0)
                                $(this).find("td:last-child a").text('-');
                        });



                        //                                $('#btnExport').css('display','block');
                        $('table').eq(1).tableExport({
                            type: 'excel',
                            filename: 'Profit & loss by month',
                            position: 'top',
                            formats: ['csv']
                        });

                        //                                $('table').eq(1).tableExport({
                        //                                  type: 'pdf',
                        //                                jspdf: {
                        //                                  orientation: 'p',
                        //                                margins: { left: 20, top: 10 },
                        //                              autotable: false
                        //                        },
                        //                      formats:['pdf']
                        //                });
                        $('.pvtTable caption').css('text-align', 'left');
                        $('.pvtTable caption button').text('Export');
                        $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                        $('<input type="button" id="btnExportpdf" value="Export pdf" />').insertAfter('.pvtTable caption button');
                        $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                    });
                });

                $('#divWait').hide();



                // groupedResults = groupByStatus(results)
                // 4. Create DOMs and attach them to HTML page.
                // buildDOMAndAttach(groupedResults);
            });
        }
        else {
            var CurrPnLURL = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + company[0] + "')/GLE?$filter=Posting_Date ge " + dateFrom + " and Posting_Date le " + dateTo;

            $.ajax({
                url: CurrPnLURL,
                type: "GET", //or POST?
                dataType: "json",
                beforeSend: function (request) {
                    AddToHeader(request);
                },
                success: function (data) {

                    if (data.value.length > 0) {
                        /*$.ajax({
                            url: PrevPnLURL,
                            type: "GET", //or POST?
                            dataType: "json",
                            beforeSend: function (request) {
                                AddToHeader(request);
                            },
                            success: function (data1) {*/
                        var final = data.value;//.concat(data1.value);
                        var str = this.url;
                        var mySubString = str.substring(
                            str.lastIndexOf("(") + 2,
                            str.lastIndexOf(")") - 1
                        );
                        $.each(final, function (i, item) {

                            item.Translator = mySubString;
                        });

                        globalData = final;

                        var Months = {
                            "01": "January",
                            "02": "Februaray",
                            "03": "March",
                            "04": "April",
                            "05": "May",
                            "06": "June",
                            "07": "July",
                            "08": "August",
                            "09": "September",
                            "10": "October",
                            "11": "November",
                            "12": "December"
                        };
                        $.each(final, function (i, item) {
                            //                            var strFrom = dateFrom.toString();
                            //                            var strTo = dateTo.toString();

                            //                            if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                            //                                //item.Period = "Period From " + dateFrom + " To " + dateTo;
                            //                                item.Period = Months[strFrom.substring(5, 7)] + " 2020";

                            //                            }
                            //                            else {
                            //                                item.Period = "From " + dateFrom + " To " + dateTo;
                            //                            }
                            //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                            item.G_L_Account_Name = item.G_L_Account_Name.trim();
                        });

                        var res = '';
                        if (vend[0] === 'All') {
                            res = $.grep(final, function (n, i) {
                                return n.G_L_Account_No >= 50000;
                            });
                        }
                        else {
                            var filteredArray = final.filter(function (array_el) {
                                return vend.filter(function (anotherOne_el) {
                                    return anotherOne_el == array_el.Vendor_Name;
                                }).length > 0
                            });

                            res = $.grep(filteredArray, function (n, i) {
                                return n.G_L_Account_No >= 50000;
                            });
                        }
                        var resPeriod = $.grep(res, function (n, i) {
                            return n.Description.indexOf("Close") < 0;
                        });


                        /*-                        if (data1.value.length === 0) {
                        
                                                    var strFrom = prevdateFrom.toString();
                                                    var strTo = prevdateTo.toString();
                        
                                                    if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                                                        //item.Period = "Period From " + dateFrom + " To " + dateTo;
                                                        res.push({ "Period": Months[strFrom.substring(5, 7)] + " " + strFrom.substring(0, 4) });
                        
                                                    }
                                                    else {
                                                        res.push({ "Period": "From " + prevdateFrom + " To " + prevdateTo });
                                                    }
                                                    //res.push({ "Period": "Period From " + prevdateFrom + " To " + prevdateTo });
                                                }*/
                        $(function () {
                            var sum = $.pivotUtilities.aggregatorTemplates.sum;
                            var numberFormat = $.pivotUtilities.numberFormat;
                            var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                            $(function () {
                                $("#pivot").pivot(resPeriod,
                                    {
                                        rows: ["G_L_Account_No", "G_L_Account_Name"],
                                        cols: ["Period"],
                                        aggregator: sum(intFormat)(["Amount"]),
                                        colOrder: "key_z_to_a"
                                    }
                                );
                                var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                                    '<h2 >' + company[0] + '</h2>' +
                                    '<h3 >Profit and Loss</h3>' +
                                    '<p>Period: ' + $('#datepickerFrom').val() + '..' + $('#datepickerTo').val() + '</p>' +
                                    '</div><br/><br/>';
                                $(Header).insertBefore('.pvtTable');
                                $('.pvtTable thead tr').eq(1).remove();
                                $('.pvtTable thead tr th:eq(1)').remove();
                                $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th><th></th>');
                                $(".pvtTable th:last-child, .pvtTable td:last-child").remove();
                                $('.pvtTable').switchColumns(0, 1);

                                $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                                $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                                $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                                $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                                $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                                $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                                $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                                $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                                $('.pvtTable thead tr th:eq(0)').text('Account Number');
                                $('.pvtTable thead tr th:eq(1)').text('Account Description');
                                $('.pvtTable thead tr th:eq(2)').text('Amount');


                                //       $(".pvtTable tbody tr:last").prev().remove();
                                $('.pvtTable').ConvertHyperlink();
                                $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                                $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                                $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                                $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                                $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                                $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                                $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                                $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                                var Ttl = $('.pvtTable tbody tr:last td:eq(0)').text();
                                var int = parseInt(Ttl, 10);
                                if (int > 0) {
                                    $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td> (' + Ttl + ') </td>');
                                    $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                                    $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> (' + Ttl + ') </td>');
                                    $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                                }
                                else {

                                    $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td> ' + Ttl + ' </td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                                    $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                                    $('.pvtTable tbody tr:last').after('<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th><td> ' + Ttl + ' </td><td class="pvtTotal colTotal" data-value="" data-for="col1"></td></tr>');
                                    $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                                }

                                $('.pvtTable tbody tr').each(function () {
                                    if ($(this).find("td:last-child a").text() == 0)
                                        $(this).find("td:last-child a").text('-');
                                });
                                if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                                    $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                                }
                                //                                $('#btnExport').css('display','block');
                                $('table').eq(1).tableExport({
                                    type: 'excel',
                                    filename: 'Profit & loss by month',
                                    position: 'top',
                                    formats: ['csv']
                                });

                                //                                $('table').eq(1).tableExport({
                                //                                  type: 'pdf',
                                //                                jspdf: {
                                //                                  orientation: 'p',
                                //                                margins: { left: 20, top: 10 },
                                //                              autotable: false
                                //                        },
                                //                      formats:['pdf']
                                //                });
                                $('.pvtTable caption').css('text-align', 'left');
                                $('.pvtTable caption button').text('Export to Excel');
                                $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                                $('<input disabled type="button" id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                                $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                            });
                        });
                    }
                    else {
                        $("#pivot").empty();
                        var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                            '<h2 >' + company[0] + '</h2>' +
                            '<h3 >Profit and Loss</h3>' +
                            '<p>Period: ' + $('#datepickerFrom').val() + '..' + $('#datepickerTo').val() + '</p>' +
                            '</div><br/><br/>' +
                            'Entries not found';
                        $("#pivot").append(Header);
                    }
                    $('#divWait').hide();


                },
                error: function () {
                    alert("error");
                }
            });
        }
        /*},
 
        error: function () { alert("error") }
    })*/
    }
}

function PLProjectPeriod(project, vend) {
    var dateTo = new Date($('#datepickerTo').val()).yyyymmdd(true);
    var dateFrom = new Date($('#datepickerFrom').val()).yyyymmdd(true);

    if (project.length > 1) {
        var i,
            results = [],
            deferred,
            deferreds = [];// 1. Make multiple AJAX calls to a Server
        $('#ddlCompany > option').each(function () {
            if (this.text != "All") {
                CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + this.text + "')/GLE?$filter=Global_Dimension_1_Code ne '' and Posting_Date ge " + dateFrom + " and Posting_Date le " + dateTo;
                deferred = $.ajax({
                    url: CompUrl,
                    type: "GET", //or POST?
                    dataType: "json",
                    beforeSend: function (request) {
                        AddToHeader(request);
                    },
                    success: function (result) {
                        // 2. Store the results in an array
                        var data = result.value;
                        var str = this.url;
                        var mySubString = str.substring(
                            str.lastIndexOf("(") + 2,
                            str.lastIndexOf(")") - 1
                        );

                        $.each(data, function (i, item) {

                            item.Translator = mySubString;
                        });

                        /* $.each(data, function (i, item) {
                             
                             item.Translator = $(this).url;
                         });*/
                        results.push(data);

                    }
                });
                deferreds.push(deferred);
            }
        });
        $.when.apply($, deferreds).then(function () {
            // 3. Process the result array.
            var Months = {
                "01": "January",
                "02": "Februaray",
                "03": "March",
                "04": "April",
                "05": "May",
                "06": "June",
                "07": "July",
                "08": "August",
                "09": "September",
                "10": "October",
                "11": "November",
                "12": "December"
            };
            var final;
            final = results.flat(1);
            if (final.length > 0) {
                globalData = final;
                $.each(final, function (i, item) {
                    //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                    item.G_L_Account_Name = item.G_L_Account_Name.trim();
                });

                var res = '';

                var final1 = final.filter(function (array_el) {
                    return project.filter(function (anotherOne_el) {
                        return anotherOne_el == array_el.Global_Dimension_1_Code;
                    }).length > 0
                });

                if (vend[0] === 'All') {
                    res = $.grep(final1, function (n, i) {
                        return n.G_L_Account_No >= 50000;
                    });
                }
                else {
                    var filteredArray = final1.filter(function (array_el) {
                        return vend.filter(function (anotherOne_el) {
                            return anotherOne_el == array_el.Vendor_Name;
                        }).length > 0
                    });

                    res = $.grep(filteredArray, function (n, i) {
                        return n.G_L_Account_No >= 50000;
                    });
                }

                var resPeriod = $.grep(res, function (n, i) {
                    return n.Description.indexOf("Close") < 0;
                });
                //        if (data1.value.length === 0) {

                //            var strFrom = prevdateFrom.toString();
                //            var strTo = prevdateTo.toString();

                //            if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                //item.Period = "Period From " + dateFrom + " To " + dateTo;
                //                res.push({ "Period": Months[strFrom.substring(5, 7)] + " " + strFrom.substring(0, 4) });

                //            }
                //            else {
                //                res.push({ "Period": "From " + prevdateFrom + " To " + prevdateTo });
                //            }
                //res.push({ "Period": "Period From " + prevdateFrom + " To " + prevdateTo });
                //      }

                $(function () {
                    var sum = $.pivotUtilities.aggregatorTemplates.sum;
                    var numberFormat = $.pivotUtilities.numberFormat;
                    var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                    $(function () {
                        $("#pivot").pivot(resPeriod,
                            {
                                rows: ["G_L_Account_No", "G_L_Account_Name"],
                                cols: ["Global_Dimension_1_Code"],
                                aggregator: sum(intFormat)(["Amount"]),
                                colOrder: "key_z_to_a"
                            }
                        );
                        var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                            //'<h2 >' + company + '</h2>' +
                            '<h3 >Profit and Loss</h3>' +
                            '<p>Period: ' + minDate(res) + '..' + $('#datepickerTo').val() + '</p>' +
                            '</div><br/><br/>';
                        $(Header).insertBefore('.pvtTable');
                        $('.pvtTable thead tr').eq(1).remove();
                        $('.pvtTable thead tr th:eq(1)').remove();
                        $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th>');

                        $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                        $('<th></th>').insertAfter($('.pvtTable thead tr th:eq(0)'));

                        $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(0)').text('Account Number');
                        $('.pvtTable thead tr th:eq(1)').text('Account Description');

                        //  $(".pvtTable tbody tr:last").prev().remove();
                        $('.pvtTable').ConvertHyperlinkProject();
                        $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                        $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                        $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                        $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                        $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                        $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                        $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                        var strrow1 = '<tr><th class="pvtTotalLabel pvtColTotalLabel">Net Operating Income</th><th></th>>';
                        var strrow2 = '<tr><th class="pvtTotalLabel pvtColTotalLabel">Net Income</th><th></th>';
                        var $td = $('.pvtTable tbody tr:last').find('td');
                        $td.each(function (i, ele) {

                            var Ttl = $('.pvtTable tbody tr:last td:eq(' + i + ')').text();
                            var int = parseInt(Ttl, 10);
                            if (int > 0) {
                                strrow1 += '<td> (' + Ttl + ') </td>';
                                strrow2 += '<td> (' + Ttl + ') </td>';
                            }
                            else {
                                strrow1 += '<td> ' + Ttl + ' </td>';
                                strrow2 += '<td> ' + Ttl + ' </td>';
                            }
                        });
                        $('.pvtTable tbody tr:last').after(strrow1);//'<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        $('.pvtTable tbody tr:last').after(strrow2);//<td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                        $('.pvtTable tbody tr').each(function () {
                            if ($(this).find("td:last-child a").text() == 0)
                                $(this).find("td:last-child a").text('-');
                        });



                        /* if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                             $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                         }*/
                        //                                $('#btnExport').css('display','block');
                        $('table').eq(1).tableExport({
                            type: 'excel',
                            filename: 'Profit & loss by month',
                            position: 'top',
                            formats: ['csv']
                        });

                        //                                $('table').eq(1).tableExport({
                        //                                  type: 'pdf',
                        //                                jspdf: {
                        //                                  orientation: 'p',
                        //                                margins: { left: 20, top: 10 },
                        //                              autotable: false
                        //                        },
                        //                      formats:['pdf']
                        //                });
                        $('.pvtTable caption').css('text-align', 'left');
                        $('.pvtTable caption button').text('Export to Excel');
                        $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                        $('<input disabled type="button" id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                        $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                    });

                });

            }
            else {
                $("#pivot").empty();
                var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                    //                            '<h2 >' + company[0] + '</h2>' +
                    '<h3 >Profit and Loss</h3>' +
                    '<p>Period: ' + $('#datepickerFrom').val() + '..' + $('#datepickerTo').val() + '</p>' +
                    '</div><br/><br/>' +
                    'Entries not found';
                $("#pivot").append(Header);
            }


            $('#divWait').hide();
            // groupedResults = groupByStatus(results)
            // 4. Create DOMs and attach them to HTML page.
            // buildDOMAndAttach(groupedResults);
        });
    }
    else if (project.length === 1) {
        if (project[0] == "All") {
            var i,
                results = [],
                deferred,
                deferreds = [];// 1. Make multiple AJAX calls to a Server
            $('#ddlCompany > option').each(function () {
                if (this.text != "All") {
                    CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + this.text + "')/GLE?$filter=Global_Dimension_1_Code ne '' and Posting_Date ge " + dateFrom + " and Posting_Date le " + dateTo;
                    deferred = $.ajax({
                        url: CompUrl,
                        type: "GET", //or POST?
                        dataType: "json",
                        beforeSend: function (request) {
                            AddToHeader(request);
                        },
                        success: function (result) {
                            // 2. Store the results in an array
                            var data = result.value;
                            var str = this.url;
                            var mySubString = str.substring(
                                str.lastIndexOf("(") + 2,
                                str.lastIndexOf(")") - 1
                            );

                            $.each(data, function (i, item) {

                                item.Translator = mySubString;
                            });

                            /* $.each(data, function (i, item) {
                                 
                                 item.Translator = $(this).url;
                             });*/
                            results.push(data);

                        }
                    });
                    deferreds.push(deferred);
                }
            });
            $.when.apply($, deferreds).then(function () {
                // 3. Process the result array.
                var Months = {
                    "01": "January",
                    "02": "Februaray",
                    "03": "March",
                    "04": "April",
                    "05": "May",
                    "06": "June",
                    "07": "July",
                    "08": "August",
                    "09": "September",
                    "10": "October",
                    "11": "November",
                    "12": "December"
                };
                var final;
                final = results.flat(1);
                if (final.length > 0) {
                    globalData = final;
                    $.each(final, function (i, item) {
                        //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                        item.G_L_Account_Name = item.G_L_Account_Name.trim();
                    });
                    var res = '';

                    if (vend[0] === 'All') {
                        res = $.grep(final, function (n, i) {
                            return n.G_L_Account_No >= 50000;
                        });
                    }
                    else {
                        var filteredArray = final.filter(function (array_el) {
                            return vend.filter(function (anotherOne_el) {
                                return anotherOne_el == array_el.Vendor_Name;
                            }).length > 0
                        });

                        res = $.grep(filteredArray, function (n, i) {
                            return n.G_L_Account_No >= 50000;
                        });
                    }

                    var resPeriod = $.grep(res, function (n, i) {
                        return n.Description.indexOf("Close") < 0;
                    });

                    //        if (data1.value.length === 0) {

                    //            var strFrom = prevdateFrom.toString();
                    //            var strTo = prevdateTo.toString();

                    //            if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                    //item.Period = "Period From " + dateFrom + " To " + dateTo;
                    //                res.push({ "Period": Months[strFrom.substring(5, 7)] + " " + strFrom.substring(0, 4) });

                    //            }
                    //            else {
                    //                res.push({ "Period": "From " + prevdateFrom + " To " + prevdateTo });
                    //            }
                    //res.push({ "Period": "Period From " + prevdateFrom + " To " + prevdateTo });
                    //      }

                    $(function () {
                        var sum = $.pivotUtilities.aggregatorTemplates.sum;
                        var numberFormat = $.pivotUtilities.numberFormat;
                        var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                        $(function () {
                            $("#pivot").pivot(resPeriod,
                                {
                                    rows: ["G_L_Account_No", "G_L_Account_Name"],
                                    cols: ["Global_Dimension_1_Code"],
                                    aggregator: sum(intFormat)(["Amount"]),
                                    colOrder: "key_z_to_a"
                                }
                            );
                            var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                                //'<h2 >' + company + '</h2>' +
                                '<h3 >Profit and Loss</h3>' +
                                '<p>Period: ' + minDate(res) + '..' + $('#datepickerTo').val() + '</p>' +
                                '</div><br/><br/>';
                            $(Header).insertBefore('.pvtTable');
                            $('.pvtTable thead tr').eq(1).remove();
                            $('.pvtTable thead tr th:eq(1)').remove();
                            $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th>');

                            $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                            $('<th></th>').insertAfter($('.pvtTable thead tr th:eq(0)'));

                            $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(0)').text('Account Number');
                            $('.pvtTable thead tr th:eq(1)').text('Account Description');

                            //  $(".pvtTable tbody tr:last").prev().remove();
                            $('.pvtTable').ConvertHyperlinkProject();
                            $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                            $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                            $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                            $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                            $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                            $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                            $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                            var strrow1 = '<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th>';
                            var strrow2 = '<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th>';
                            var $td = $('.pvtTable tbody tr:last').find('td');
                            $td.each(function (i, ele) {

                                var Ttl = $('.pvtTable tbody tr:last td:eq(' + i + ')').text();
                                var int = parseInt(Ttl, 10);
                                if (int > 0) {
                                    strrow1 += '<td> (' + Ttl + ') </td>';
                                    strrow2 += '<td> (' + Ttl + ') </td>';
                                }
                                else {
                                    strrow1 += '<td> ' + Ttl + ' </td>';
                                    strrow2 += '<td> ' + Ttl + ' </td>';
                                }
                            });
                            $('.pvtTable tbody tr:last').after(strrow1);//'<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                            $('.pvtTable tbody tr:last').after(strrow2);//<td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                            $('.pvtTable tbody tr').each(function () {
                                if ($(this).find("td:last-child a").text() == 0)
                                    $(this).find("td:last-child a").text('-');
                            });



                            /* if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                                 $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                             }*/
                            //                                $('#btnExport').css('display','block');
                            $('table').eq(1).tableExport({
                                type: 'excel',
                                filename: 'Profit & loss by month',
                                position: 'top',
                                formats: ['csv']
                            });

                            //                                $('table').eq(1).tableExport({
                            //                                  type: 'pdf',
                            //                                jspdf: {
                            //                                  orientation: 'p',
                            //                                margins: { left: 20, top: 10 },
                            //                              autotable: false
                            //                        },
                            //                      formats:['pdf']
                            //                });
                            $('.pvtTable caption').css('text-align', 'left');
                            $('.pvtTable caption button').text('Export to Excel');
                            $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                            $('<input disabled type="button" id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                            $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                        });

                    });
                }
                else {
                    $("#pivot").empty();
                    var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                        //'<h2 >' + company[0] + '</h2>' +
                        '<h3 >Profit and Loss</h3>' +
                        '<p>Period: ' + $('#datepickerFrom').val() + '..' + $('#datepickerTo').val() + '</p>' +
                        '</div><br/><br/>' +
                        'Entries not found';
                    $("#pivot").append(Header);
                }


                $('#divWait').hide();

                // groupedResults = groupByStatus(results)
                // 4. Create DOMs and attach them to HTML page.
                // buildDOMAndAttach(groupedResults);
            });



        }
        else {
            var i,
                results = [],
                deferred,
                deferreds = [];// 1. Make multiple AJAX calls to a Server
            $('#ddlCompany > option').each(function () {
                if (this.text != "All") {
                    CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + this.text + "')/GLE?$filter=Global_Dimension_1_Code ne '' and Posting_Date ge " + dateFrom + " and Posting_Date le " + dateTo;
                    deferred = $.ajax({
                        url: CompUrl,
                        type: "GET", //or POST?
                        dataType: "json",
                        beforeSend: function (request) {
                            AddToHeader(request);
                        },
                        success: function (result) {
                            // 2. Store the results in an array
                            var data = result.value;
                            var str = this.url;
                            var mySubString = str.substring(
                                str.lastIndexOf("(") + 2,
                                str.lastIndexOf(")") - 1
                            );

                            $.each(data, function (i, item) {

                                item.Translator = mySubString;
                            });

                            /* $.each(data, function (i, item) {
                                 
                                 item.Translator = $(this).url;
                             });*/
                            results.push(data);

                        }
                    });
                    deferreds.push(deferred);
                }
            });
            $.when.apply($, deferreds).then(function () {
                // 3. Process the result array.
                var Months = {
                    "01": "January",
                    "02": "Februaray",
                    "03": "March",
                    "04": "April",
                    "05": "May",
                    "06": "June",
                    "07": "July",
                    "08": "August",
                    "09": "September",
                    "10": "October",
                    "11": "November",
                    "12": "December"
                };
                console.log(results);
                var final;
                final = results.flat(1);
                if (final.length > 0) {
                    globalData = final;
                    $.each(final, function (i, item) {
                        //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                        item.G_L_Account_Name = item.G_L_Account_Name.trim();
                    });

                    final = $.grep(final, function (n, i) {
                        return n.Global_Dimension_1_Code == project[0];
                    })
                    var res = '';

                    if (vend[0] === 'All') {
                        res = $.grep(final, function (n, i) {
                            return n.G_L_Account_No >= 50000;
                        });
                    }
                    else {
                        var filteredArray = final.filter(function (array_el) {
                            return vend.filter(function (anotherOne_el) {
                                return anotherOne_el == array_el.Vendor_Name;
                            }).length > 0
                        });

                        res = $.grep(filteredArray, function (n, i) {
                            return n.G_L_Account_No >= 50000;
                        });
                    }

                    var resPeriod = $.grep(res, function (n, i) {
                        return n.Description.indexOf("Close") < 0;
                    });

                    //        if (data1.value.length === 0) {

                    //            var strFrom = prevdateFrom.toString();
                    //            var strTo = prevdateTo.toString();

                    //            if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                    //item.Period = "Period From " + dateFrom + " To " + dateTo;
                    //                res.push({ "Period": Months[strFrom.substring(5, 7)] + " " + strFrom.substring(0, 4) });

                    //            }
                    //            else {
                    //                res.push({ "Period": "From " + prevdateFrom + " To " + prevdateTo });
                    //            }
                    //res.push({ "Period": "Period From " + prevdateFrom + " To " + prevdateTo });
                    //      }

                    $(function () {
                        var sum = $.pivotUtilities.aggregatorTemplates.sum;
                        var numberFormat = $.pivotUtilities.numberFormat;
                        var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                        $(function () {
                            $("#pivot").pivot(resPeriod,
                                {
                                    rows: ["G_L_Account_No", "G_L_Account_Name"],
                                    cols: ["Global_Dimension_1_Code"],
                                    aggregator: sum(intFormat)(["Amount"]),
                                    colOrder: "key_z_to_a"
                                }
                            );
                            var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                                //'<h2 >' + company + '</h2>' +
                                '<h3 >Profit and Loss</h3>' +
                                '<p>Period: ' + minDate(res) + '..' + $('#datepickerTo').val() + '</p>' +
                                '</div><br/><br/>';
                            $(Header).insertBefore('.pvtTable');
                            $('.pvtTable thead tr').eq(1).remove();
                            $('.pvtTable thead tr th:eq(1)').remove();
                            $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th>');

                            $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                            $('<th></th>').insertAfter($('.pvtTable thead tr th:eq(0)'));

                            $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                            $('.pvtTable thead tr th:eq(0)').text('Account Number');
                            $('.pvtTable thead tr th:eq(1)').text('Account Description');

                            //  $(".pvtTable tbody tr:last").prev().remove();
                            $('.pvtTable').ConvertHyperlinkProject();
                            $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th class="pvtTotalLabel">Total Expenses</th><th></th>');
                            $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                            $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                            $('.pvtTable tbody tr th:first-child').removeAttr('colspan');
                            $('.pvtTable tbody tr th:first-child').removeAttr('rowspan');
                            $('.pvtTable tbody tr th:nth-child(2)').removeAttr('colspan');
                            $('.pvtTable tbody tr th:nth-child(2)').removeAttr('rowspan');



                            var strrow1 = '<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th>';
                            var strrow2 = '<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Income</th><th></th>';
                            var $td = $('.pvtTable tbody tr:last').find('td');
                            $td.each(function (i, ele) {

                                var Ttl = $('.pvtTable tbody tr:last td:eq(' + i + ')').text();
                                var int = parseInt(Ttl, 10);
                                if (int > 0) {
                                    strrow1 += '<td> (' + Ttl + ') </td>';
                                    strrow2 += '<td> (' + Ttl + ') </td>';
                                }
                                else {
                                    strrow1 += '<td> ' + Ttl + ' </td>';
                                    strrow2 += '<td> ' + Ttl + ' </td>';
                                }
                            });
                            $('.pvtTable tbody tr:last').after(strrow1);//'<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                            $('.pvtTable tbody tr:last').after(strrow2);//<td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                            $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                            $('.pvtTable tbody tr').each(function () {
                                if ($(this).find("td:last-child a").text() == 0)
                                    $(this).find("td:last-child a").text('-');
                            });



                            /* if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                                 $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                             }*/
                            //                                $('#btnExport').css('display','block');
                            $('table').eq(1).tableExport({
                                type: 'excel',
                                filename: 'Profit & loss by month',
                                position: 'top',
                                formats: ['csv']
                            });

                            //                                $('table').eq(1).tableExport({
                            //                                  type: 'pdf',
                            //                                jspdf: {
                            //                                  orientation: 'p',
                            //                                margins: { left: 20, top: 10 },
                            //                              autotable: false
                            //                        },
                            //                      formats:['pdf']
                            //                });
                            $('.pvtTable caption').css('text-align', 'left');
                            $('.pvtTable caption button').text('Export to Excel');
                            $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                            $('<input disabled type="button" id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                            $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                        });

                    });


                } else {
                    $("#pivot").empty();
                    var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                        //    '<h2 >' + company[0] + '</h2>' +
                        '<h3 >Profit and Loss</h3>' +
                        '<p>Period: ' + $('#datepickerFrom').val() + '..' + $('#datepickerTo').val() + '</p>' +
                        '</div><br/><br/>' +
                        'Entries not found';
                    $("#pivot").append(Header);
                }
                $('#divWait').hide();

                // groupedResults = groupByStatus(results)
                // 4. Create DOMs and attach them to HTML page.
                // buildDOMAndAttach(groupedResults);
            });
        }
    }
}

function PLCompanyMonth(company, vend) {
    var dateTo = new Date($('#datepickerTo').val()).yyyymmdd(true);
    var dateFrom = new Date($('#datepickerFrom').val()).yyyymmdd(true);
    if (company.length > 1) {
        var i,
            results = [],
            deferred,
            deferreds = [];// 1. Make multiple AJAX calls to a Server
        for (i = 0; i < company.length; ++i) {

            CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + company[i] + "')/GLE?$filter=Posting_Date ge " + dateFrom + " and Posting_Date le " + dateTo;
            //CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + company[i] + "')/GLE";
            deferred = $.ajax({
                url: CompUrl,
                type: "GET", //or POST?
                dataType: "json",
                beforeSend: function (request) {
                    AddToHeader(request);
                },
                success: function (result) {
                    // 2. Store the results in an array
                    var data = result.value;
                    var str = this.url;
                    var mySubString = str.substring(
                        str.lastIndexOf("(") + 2,
                        str.lastIndexOf(")") - 1
                    );
                    $.each(data, function (i, item) {
                        var strDate = item.Posting_Date;
                        var year = strDate.substring(0, 4);
                        var month = strDate.substring(5, 7);
                        item.MonthYear = month + ' ' + year;
                        item.Translator = mySubString;
                    });

                    /* $.each(data, function (i, item) {
                         
                         item.Translator = $(this).url;
                     });*/
                    results.push(data);

                }
            });
            deferreds.push(deferred);
        }
        $.when.apply($, deferreds).then(function () {
            // 3. Process the result array.
            var Months = {
                "01": "January",
                "02": "Februaray",
                "03": "March",
                "04": "April",
                "05": "May",
                "06": "June",
                "07": "July",
                "08": "August",
                "09": "September",
                "10": "October",
                "11": "November",
                "12": "December"
            };
            var final;
            final = results.flat(1);
            globalData = final;
            $.each(final, function (i, item) {
                //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                item.G_L_Account_Name = item.G_L_Account_Name.trim();
            });
            var res = '';

            if (vend[0] === 'All') {
                res = $.grep(final, function (n, i) {
                    return n.G_L_Account_No >= 50000;
                });
            }
            else {
                var filteredArray = final.filter(function (array_el) {
                    return vend.filter(function (anotherOne_el) {
                        return anotherOne_el == array_el.Vendor_Name;
                    }).length > 0
                });

                res = $.grep(filteredArray, function (n, i) {
                    return n.G_L_Account_No >= 50000;
                });
            }
            var resMonth = $.grep(res, function (n, i) {
                return n.Description.indexOf("Close") < 0;
            });

            $(function () {
                var sum = $.pivotUtilities.aggregatorTemplates.sum;
                var numberFormat = $.pivotUtilities.numberFormat;
                var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                $(function () {
                    $("#pivot").pivot(resMonth,
                        {
                            rows: ["G_L_Account_No", "G_L_Account_Name"],
                            cols: ["MonthYear"],
                            aggregator: sum(intFormat)(["Amount"]),
                            colOrder: "key_z_to_a"
                        }
                    );
                    var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                        '<h2 ></h2>' +
                        '<h3 >Profit and Loss</h3>' +
                        '<p>Period: ' + $('#datepickerFrom').val() + '..' + $('#datepickerTo').val() + '</p>' +
                        '</div><br/><br/>';
                    $(Header).insertBefore('.pvtTable');
                    $('.pvtTable thead tr').eq(1).remove();
                    $('.pvtTable thead tr th:eq(1)').remove();
                    $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th>');

                    $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                    $('<th></th>').insertAfter($('.pvtTable thead tr th:eq(0)'));

                    var $th = $('.pvtTable thead tr').find('th');
                    $th.each(function (i, ele) {
                        $('.pvtTable thead tr th:eq(' + (i + 1) + ')').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(' + (i + 1) + ')').removeAttr('rowspan');
                    });

                    $th = $('.pvtTable thead tr').find('th');
                    $th.each(function (i, ele) {
                        if (i > 1 && i < $th.length - 1) {
                            var dt = $('.pvtTable thead tr th:eq(' + i + ')').text();
                            var dtstr = dt.substring(0, 2);
                            var replaced = dt.replace(dtstr, Months[dtstr]);

                            $('.pvtTable thead tr th:eq(' + i + ')').text(replaced);
                        }
                    });


                    $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                    $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                    $('.pvtTable thead tr th:eq(0)').text('Account Number');
                    $('.pvtTable thead tr th:eq(1)').text('Account Description');
                    $('.pvtTable thead tr th:eq(1)').attr('colspan', '2');


                    $('.pvtTable').ConvertHyperlinkMonth();
                    $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th></th><th class="pvtTotalLabel" colspan="2">Total Expenses</th>');
                    $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                    $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                    $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                    var strrow1 = '<tr><th></th><th class="pvtTotalLabel pvtColTotalLabel" colspan="2" >Net Operating Income</th>';
                    var strrow2 = '<tr><th></th><th class="pvtTotalLabel pvtColTotalLabel" colspan="2" >Net Income</th>';
                    var $td = $('.pvtTable tbody tr:last').find('td');
                    $td.each(function (i, ele) {

                        var Ttl = $('.pvtTable tbody tr:last td:eq(' + i + ')').text();
                        var int = parseInt(Ttl, 10);
                        if (int > 0) {
                            strrow1 += '<td> (' + Ttl + ') </td>';
                            strrow2 += '<td> (' + Ttl + ') </td>';
                        }
                        else {
                            strrow1 += '<td> ' + Ttl + ' </td>';
                            strrow2 += '<td> ' + Ttl + ' </td>';
                        }
                    });
                    // if (int > 0) {
                    //}
                    $('.pvtTable tbody tr:last').after(strrow1);//'<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                    $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                    $('.pvtTable tbody tr:last').after(strrow2);//<td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                    $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                    $('.pvtTable tbody tr').each(function () {
                        if ($(this).find("td:last-child a").text() == 0)
                            $(this).find("td:last-child a").text('-');
                    });
                    if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                        $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                    }
                    //                                $('#btnExport').css('display','block');
                    $('table').eq(1).tableExport({
                        type: 'excel',
                        filename: 'Profit & loss by month',
                        position: 'top',
                        formats: ['csv']
                    });

                    //                                $('table').eq(1).tableExport({
                    //                                  type: 'pdf',
                    //                                jspdf: {
                    //                                  orientation: 'p',
                    //                                margins: { left: 20, top: 10 },
                    //                              autotable: false
                    //                        },
                    //                      formats:['pdf']
                    //                });
                    $('.pvtTable caption').css('text-align', 'left');
                    $('.pvtTable caption button').text('Export to Excel');
                    $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                    $('<input disabled type="button" id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                    $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });


                });
            });
            $('#divWait').hide();
        });
    }
    else if (company.length === 1) {
        if (company[0] == "All") {
            var i,
                results = [],
                deferred,
                deferreds = [];// 1. Make multiple AJAX calls to a Server
            $('#ddlCompany > option').each(function () {
                if (this.text != "All") {

                    for (i = 0; i < company.length; ++i) {
                        var CurrPnLURL = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + this.text + "')/GLE?$filter=Posting_Date ge " + dateFrom + " and Posting_Date le " + dateTo;
                        //CompUrl = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + company[i] + "')/GLE";
                        deferred = $.ajax({
                            url: CurrPnLURL,
                            type: "GET", //or POST?
                            dataType: "json",
                            beforeSend: function (request) {
                                AddToHeader(request);
                            },
                            success: function (result) {
                                // 2. Store the results in an array
                                var data = result.value;
                                var str = this.url;
                                var mySubString = str.substring(
                                    str.lastIndexOf("(") + 2,
                                    str.lastIndexOf(")") - 1
                                );
                                $.each(data, function (i, item) {
                                    var strDate = item.Posting_Date;
                                    var year = strDate.substring(0, 4);
                                    var month = strDate.substring(5, 7);


                                    item.MonthYear = month + ' ' + year;
                                    item.Translator = mySubString;


                                    item.Translator = mySubString;
                                });

                                /* $.each(data, function (i, item) {
                                     
                                     item.Translator = $(this).url;
                                 });*/
                                results.push(data);
                            }
                        });
                        deferreds.push(deferred);
                    }
                }
            });
            $.when.apply($, deferreds).then(function () {
                // 3. Process the result array.
                var Months = {
                    "01": "January",
                    "02": "Februaray",
                    "03": "March",
                    "04": "April",
                    "05": "May",
                    "06": "June",
                    "07": "July",
                    "08": "August",
                    "09": "September",
                    "10": "October",
                    "11": "November",
                    "12": "December"
                };
                var final;
                final = results.flat(1);
                globalData = final;
                $.each(final, function (i, item) {
                    //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                    item.G_L_Account_Name = item.G_L_Account_Name.trim();
                });
                var res = '';

                if (vend[0] === 'All') {
                    res = $.grep(final, function (n, i) {
                        return n.G_L_Account_No >= 50000;
                    });
                }
                else {
                    var filteredArray = final.filter(function (array_el) {
                        return vend.filter(function (anotherOne_el) {
                            return anotherOne_el == array_el.Vendor_Name;
                        }).length > 0
                    });

                    res = $.grep(filteredArray, function (n, i) {
                        return n.G_L_Account_No >= 50000;
                    });
                }
                var resMonth = $.grep(res, function (n, i) {
                    return n.Description.indexOf("Close") < 0;
                });

                $(function () {
                    var sum = $.pivotUtilities.aggregatorTemplates.sum;
                    var numberFormat = $.pivotUtilities.numberFormat;
                    var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                    $(function () {
                        $("#pivot").pivot(resMonth,
                            {
                                rows: ["G_L_Account_No", "G_L_Account_Name"],
                                cols: ["MonthYear"],
                                aggregator: sum(intFormat)(["Amount"]),
                                colOrder: "key_z_to_a"
                            }
                        );
                        //                        var Header = '<div style="border:black solid 1.5pt;width:30%;margin-left:15%;margin-right:auto;text-align:center;">' +
                        //                          '<h2 >' + company + '</h2>' +
                        //                        '<h3 >Profit and Loss</h3>' +
                        //                      '<p>Period: ' + minDate(res) + '..' + $('#datepickerTo').val() + '</p>' +
                        //                    '</div><br/><br/>';
                        var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                            '<h2 ></h2>' +
                            '<h3 >Profit and Loss</h3>' +
                            '<p>Period: ' + $('#datepickerFrom').val() + '..' + $('#datepickerTo').val() + '</p>' +
                            '</div><br/><br/>';
                        $(Header).insertBefore('.pvtTable');
                        $('.pvtTable thead tr').eq(1).remove();
                        $('.pvtTable thead tr th:eq(1)').remove();
                        $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th>');

                        $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                        $('<th></th>').insertAfter($('.pvtTable thead tr th:eq(0)'));

                        var $th = $('.pvtTable thead tr').find('th');
                        $th.each(function (i, ele) {
                            $('.pvtTable thead tr th:eq(' + (i + 1) + ')').removeAttr('colspan');
                            $('.pvtTable thead tr th:eq(' + (i + 1) + ')').removeAttr('rowspan');
                        });

                        $th = $('.pvtTable thead tr').find('th');
                        $th.each(function (i, ele) {
                            if (i > 1 && i < $th.length - 1) {
                                var dt = $('.pvtTable thead tr th:eq(' + i + ')').text();
                                var dtstr = dt.substring(0, 2);
                                var replaced = dt.replace(dtstr, Months[dtstr]);

                                $('.pvtTable thead tr th:eq(' + i + ')').text(replaced);
                            }
                        });


                        $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                        $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                        $('.pvtTable thead tr th:eq(0)').text('Account Number');
                        $('.pvtTable thead tr th:eq(1)').text('Account Description');
                        $('.pvtTable thead tr th:eq(1)').attr('colspan', '2');


                        $('.pvtTable').ConvertHyperlinkMonth();
                        $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th></th><th class="pvtTotalLabel" colspan="2">Total Expenses</th>');
                        $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                        $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                        var strrow1 = '<tr><th></th><th class="pvtTotalLabel pvtColTotalLabel" colspan="2">Net Operating Income</th>';
                        var strrow2 = '<tr><th></th><th class="pvtTotalLabel pvtColTotalLabel" colspan="2">Net Income</th>';
                        var $td = $('.pvtTable tbody tr:last').find('td');
                        $td.each(function (i, ele) {

                            var Ttl = $('.pvtTable tbody tr:last td:eq(' + i + ')').text();
                            var int = parseInt(Ttl, 10);
                            if (int > 0) {
                                strrow1 += '<td> (' + Ttl + ') </td>';
                                strrow2 += '<td> (' + Ttl + ') </td>';
                            }
                            else {
                                strrow1 += '<td> ' + Ttl + ' </td>';
                                strrow2 += '<td> ' + Ttl + ' </td>';
                            }
                        });
                        // if (int > 0) {
                        //}
                        $('.pvtTable tbody tr:last').after(strrow1);//'<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                        $('.pvtTable tbody tr:last').after(strrow2);//<td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                        $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                        $('.pvtTable tbody tr').each(function () {
                            if ($(this).find("td:last-child a").text() == 0)
                                $(this).find("td:last-child a").text('-');
                        });
                        if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                            $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                        }
                        //                                $('#btnExport').css('display','block');
                        $('table').eq(1).tableExport({
                            type: 'excel',
                            filename: 'Profit & loss by month',
                            position: 'top',
                            formats: ['csv']
                        });

                        //                                $('table').eq(1).tableExport({
                        //                                  type: 'pdf',
                        //                                jspdf: {
                        //                                  orientation: 'p',
                        //                                margins: { left: 20, top: 10 },
                        //                              autotable: false
                        //                        },
                        //                      formats:['pdf']
                        //                });
                        $('.pvtTable caption').css('text-align', 'left');
                        $('.pvtTable caption button').text('Export to Excel');
                        $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                        $('<input disabled type="button" id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                        $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });


                    });
                });

                $('#divWait').hide();



                // groupedResults = groupByStatus(results)
                // 4. Create DOMs and attach them to HTML page.
                // buildDOMAndAttach(groupedResults);
            });
        }
        else {
            var CurrPnLURL = "https://api.businesscentral.dynamics.com/v2.0/1a9533fb-c524-4eb7-96c8-fbdc362ac6a0/Production/ODataV4/Company('" + company[0] + "')/GLE?$filter=Posting_Date ge " + dateFrom + " and Posting_Date le " + dateTo;

            $.ajax({
                url: CurrPnLURL,
                type: "GET", //or POST?
                dataType: "json",
                beforeSend: function (request) {
                    AddToHeader(request);
                },
                success: function (data) {
                    var Months = {
                        "01": "January",
                        "02": "Februaray",
                        "03": "March",
                        "04": "April",
                        "05": "May",
                        "06": "June",
                        "07": "July",
                        "08": "August",
                        "09": "September",
                        "10": "October",
                        "11": "November",
                        "12": "December"
                    };

                    if (data.value.length > 0) {
                        /*$.ajax({
                            url: PrevPnLURL,
                            type: "GET", //or POST?
                            dataType: "json",
                            beforeSend: function (request) {
                                AddToHeader(request);
                            },
                            success: function (data1) {*/
                        var final = data.value;//.concat(data1.value);
                        var str = this.url;
                        var mySubString = str.substring(
                            str.lastIndexOf("(") + 2,
                            str.lastIndexOf(")") - 1
                        );
                        $.each(final, function (i, item) {
                            var strDate = item.Posting_Date;
                            var year = strDate.substring(0, 4);
                            var month = strDate.substring(5, 7);


                            item.MonthYear = month + ' ' + year;
                            item.Translator = mySubString;
                        });

                        globalData = final;



                        $.each(final, function (i, item) {
                            //                            var strFrom = dateFrom.toString();
                            //                            var strTo = dateTo.toString();

                            //                            if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                            //                                //item.Period = "Period From " + dateFrom + " To " + dateTo;
                            //                                item.Period = Months[strFrom.substring(5, 7)] + " 2020";

                            //                            }
                            //                            else {
                            //                                item.Period = "From " + dateFrom + " To " + dateTo;
                            //                            }
                            //item.Account = item.G_L_Account_No + " - " + item.G_L_Account_Name;
                            item.G_L_Account_Name = item.G_L_Account_Name.trim();
                        });
                        var res = '';
                        if (vend[0] === 'All') {
                            res = $.grep(final, function (n, i) {
                                return n.G_L_Account_No >= 50000;
                            });
                        }
                        else {
                            var filteredArray = final.filter(function (array_el) {
                                return vend.filter(function (anotherOne_el) {
                                    return anotherOne_el == array_el.Vendor_Name;
                                }).length > 0
                            });

                            res = $.grep(filteredArray, function (n, i) {
                                return n.G_L_Account_No >= 50000;
                            });
                        }
                        var resMonth = $.grep(res, function (n, i) {
                            return n.Description.indexOf("Close") < 0;
                        });




                        /*-                        if (data1.value.length === 0) {
                        
                                                    var strFrom = prevdateFrom.toString();
                                                    var strTo = prevdateTo.toString();
                        
                                                    if (strFrom.substring(5, 7) === strTo.substring(5, 7)) {
                                                        //item.Period = "Period From " + dateFrom + " To " + dateTo;
                                                        res.push({ "Period": Months[strFrom.substring(5, 7)] + " " + strFrom.substring(0, 4) });
                        
                                                    }
                                                    else {
                                                        res.push({ "Period": "From " + prevdateFrom + " To " + prevdateTo });
                                                    }
                                                    //res.push({ "Period": "Period From " + prevdateFrom + " To " + prevdateTo });
                                                }*/

                        $(function () {
                            var sum = $.pivotUtilities.aggregatorTemplates.sum;
                            var numberFormat = $.pivotUtilities.numberFormat;
                            var intFormat = numberFormat({ digitsAfterDecimal: 0 });
                            $(function () {
                                $("#pivot").pivot(resMonth,
                                    {
                                        rows: ["G_L_Account_No", "G_L_Account_Name"],
                                        cols: ["MonthYear"],
                                        aggregator: sum(intFormat)(["Amount"]),
                                        colOrder: "key_z_to_a"
                                    }
                                );
                                var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                                    '<h2 ></h2>' +
                                    '<h3 >Profit and Loss</h3>' +
                                    '<p>Period: ' + $('#datepickerFrom').val() + '..' + $('#datepickerTo').val() + '</p>' +
                                    '</div><br/><br/>';
                                $(Header).insertBefore('.pvtTable');
                                $('.pvtTable thead tr').eq(1).remove();
                                $('.pvtTable thead tr th:eq(1)').remove();
                                $('.pvtTable thead tr th:eq(0)').replaceWith('<th></th>');

                                $('.pvtTable thead tr th:eq(0)').removeAttr('colspan');
                                $('.pvtTable thead tr th:eq(0)').removeAttr('rowspan');
                                $('<th></th>').insertAfter($('.pvtTable thead tr th:eq(0)'));

                                var $th = $('.pvtTable thead tr').find('th');
                                $th.each(function (i, ele) {
                                    $('.pvtTable thead tr th:eq(' + (i + 1) + ')').removeAttr('colspan');
                                    $('.pvtTable thead tr th:eq(' + (i + 1) + ')').removeAttr('rowspan');
                                });

                                $th = $('.pvtTable thead tr').find('th');
                                $th.each(function (i, ele) {
                                    if (i > 1 && i < $th.length - 1) {
                                        var dt = $('.pvtTable thead tr th:eq(' + i + ')').text();
                                        var dtstr = dt.substring(0, 2);
                                        var replaced = dt.replace(dtstr, Months[dtstr]);

                                        $('.pvtTable thead tr th:eq(' + i + ')').text(replaced);
                                    }
                                });


                                $('.pvtTable thead tr th:eq(1)').removeAttr('colspan');
                                $('.pvtTable thead tr th:eq(1)').removeAttr('rowspan');
                                $('.pvtTable thead tr th:eq(2)').removeAttr('colspan');
                                $('.pvtTable thead tr th:eq(2)').removeAttr('rowspan');
                                $('.pvtTable thead tr th:eq(3)').removeAttr('colspan');
                                $('.pvtTable thead tr th:eq(3)').removeAttr('rowspan');
                                $('.pvtTable thead tr th:eq(0)').text('Account Number');
                                $('.pvtTable thead tr th:eq(1)').text('Account Description');
                                $('.pvtTable thead tr th:eq(1)').attr('colspan', '2');


                                $('.pvtTable').ConvertHyperlinkMonth();
                                $('.pvtTable tbody tr:last th:eq(0)').replaceWith('<th></th><th class="pvtTotalLabel" colspan="2">Total Expenses</th>');
                                $('.pvtTable tbody tr:last th:eq(0)').removeAttr('colspan');
                                $('.pvtTable tbody tr:last th:eq(0)').removeAttr('rowspan');
                                $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                                var strrow1 = '<tr><th></th><th class="pvtTotalLabel pvtColTotalLabel" colspan="2" >Net Operating Income</th>';
                                var strrow2 = '<tr><th></th><th class="pvtTotalLabel pvtColTotalLabel" colspan="2" >Net Income</th>';
                                var $td = $('.pvtTable tbody tr:last').find('td');
                                $td.each(function (i, ele) {

                                    var Ttl = $('.pvtTable tbody tr:last td:eq(' + i + ')').text();
                                    var int = parseInt(Ttl, 10);
                                    if (int > 0) {
                                        strrow1 += '<td> (' + Ttl + ') </td>';
                                        strrow2 += '<td> (' + Ttl + ') </td>';
                                    }
                                    else {
                                        strrow1 += '<td> ' + Ttl + ' </td>';
                                        strrow2 += '<td> ' + Ttl + ' </td>';
                                    }
                                });
                                // if (int > 0) {
                                //}
                                $('.pvtTable tbody tr:last').after(strrow1);//'<tr><th class="pvtTotalLabel pvtColTotalLabel" >Net Operating Income</th><th></th><td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                                $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");
                                $('.pvtTable tbody tr:last').after(strrow2);//<td><a class="tblLink" href="#" data-id="Totals"> (' + Ttl + ')</a> </td>');
                                $('.pvtTable tbody tr:last').css('border-bottom', "solid black 2pt");

                                $('.pvtTable tbody tr').each(function () {
                                    if ($(this).find("td:last-child a").text() == 0)
                                        $(this).find("td:last-child a").text('-');
                                });
                                if ($('.pvtTable tbody tr:nth-last-child(1) td:last-child').text() === '-' && $('.pvtTable tbody tr:nth-last-child(2) td:last-child').text() === '-') {
                                    $('.pvtTable tbody tr:nth-last-child(3) td:last-child').text('-');
                                }
                                //                                $('#btnExport').css('display','block');
                                $('table').eq(1).tableExport({
                                    type: 'excel',
                                    filename: 'Profit & loss by month',
                                    position: 'top',
                                    formats: ['csv']
                                });

                                //                                $('table').eq(1).tableExport({
                                //                                  type: 'pdf',
                                //                                jspdf: {
                                //                                  orientation: 'p',
                                //                                margins: { left: 20, top: 10 },
                                //                              autotable: false
                                //                        },
                                //                      formats:['pdf']
                                //                });
                                $('.pvtTable caption').css('text-align', 'left');
                                $('.pvtTable caption button').text('Export to Excel');
                                $('.pvtTable caption button').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });
                                $('<input disabled type="button" id="btnExportpdf" style="font: bold 12px sans-serif; margin-left:10px;" value="Export to Pdf" />').insertAfter('.pvtTable caption button');
                                $('.pvtTable caption input').css({ 'border-radius': '20px', 'width': '100px', 'height': '35px' });

                            });
                        });
                    }
                    else {
                        $("#pivot").empty();
                        var Header = '<div style="border:black solid 1.5pt;width:20%;margin-left:5%;margin-right:auto;text-align:center;">' +
                            '<h2 >' + company[0] + '</h2>' +
                            '<h3 >Profit and Loss</h3>' +
                            '<p>Period: ' + $('#datepickerFrom').val() + '..' + $('#datepickerTo').val() + '</p>' +
                            '</div><br/><br/>' +
                            'Entries not found';
                        $("#pivot").append(Header);
                    }
                    $('#divWait').hide();
                },
                error: function () {
                    alert("error");
                }
            });
        }
        /*},
 
        error: function () { alert("error") }
    })*/
    }

}





$(document).on("click", "#btnExportpdf", function () {
    var innerHtm = $(".pvtTable caption").html();
    var attrs = $(".pvtTable caption").attrib();
    $(".pvtTable caption").remove();
    var pvt = $(".pvtTable");
    html2canvas($('.pvtTable'), {
        onrendered: function (canvas) {
            var data = canvas.toDataURL();
            var docDefinition = {
                content: [{
                    image: data,
                    width: 500
                }]
            };
            pdfMake.createPdf(docDefinition).download("Table.pdf");
        }
    });

    setTimeout(() => {
        var inhtm = "<caption ";
        for (var key in attrs) {
            inhtm += key + "='" + attrs[key] + "' ";
        }

        inhtm += '>' + innerHtm + '</caption>';
        $(inhtm).insertBefore($(".pvtTable thead"));
        $('.pvtTable caption').css('text-align', 'left');
    }, 500);

});

(function (old) {
    $.fn.attrib = function () {
        if (arguments.length === 0) {
            if (this.length === 0) {
                return null;
            }

            var obj = {};
            $.each(this[0].attributes, function () {
                if (this.specified) {
                    obj[this.name] = this.value;
                }
            });
            return obj;
        }

        return old.apply(this, arguments);
    };
})($.fn.attrib);

$.fn.ConvertHyperlink = function () {
    var $this = this,
        $tr = $this.find('tr');

    $tr.each(function (i, ele) {
        var $ele = $(ele);
        if (i < $tr.length - 1) {

            //  if ($('.pvtTable tbody tr:eq(' + i + ') th:eq(0)')[0].innerText !== 'null') {
            if ($('.pvtTable tbody tr:eq(' + i + ') td:eq(0)')[0].innerText !== "") {
                var Amnt = $('.pvtTable tbody tr:eq(' + i + ') td:eq(0)')[0].innerText;
                var Acnt = $('.pvtTable tbody tr:eq(' + i + ') th:eq(0)')[0].innerText;
                $('.pvtTable tbody tr:eq(' + i + ') td:eq(0)').replaceWith('<td><a class="tblLink" href="#" data-id="' + Acnt + '"> ' + Amnt + '</a> </td>');
            }
            /*           
                        if ($('.pvtTable tbody tr:eq(' + i + ') td:eq(1)')[0].innerText !== "") {
                            var Amnt = $('.pvtTable tbody tr:eq(' + i + ') td:eq(1)')[0].innerText;
                            var Acnt = $('.pvtTable tbody tr:eq(' + i + ') th:eq(1)')[0].innerText;
                            $('.pvtTable tbody tr:eq(' + i + ') td:eq(1)').replaceWith('<td><a class="tblLink" href="#" data-id="' + Acnt + '"> ' + Amnt + '</a> </td>');
                        }
            */
            //}
        }
    })
}

$.fn.ConvertHyperlinkMonth = function () {
    var $this = this,
        $tr = $this.find('tr');

    $tr.each(function (i, ele) {
        var $ele = $(ele),
            $td = $ele.find('td');
        if (i < $tr.length - 1) {
            $td.each(function (j, jElem) {
                if (j < $td.length - 1) {
                    if ($('.pvtTable tbody tr:eq(' + (i - 1) + ') td:eq(' + j + ')')[0].innerText !== "") {
                        var Amnt = $('.pvtTable tbody tr:eq(' + (i - 1) + ') td:eq(' + j + ')')[0].innerText;
                        var Acnt = $('.pvtTable tbody tr:eq(' + (i - 1) + ') th:eq(0)')[0].innerText;
                        var mnth = $('.pvtTable thead tr:eq(0) th:eq(' + (j + 2) + ')')[0].innerText;
                        $('.pvtTable tbody tr:eq(' + (i - 1) + ') td:eq(' + j + ')').replaceWith('<td><a class="tblLinkMonth" href="#" data-id="' + Acnt + ',' + mnth + '"> ' + Amnt + '</a> </td>');
                    }
                }
            });
        }
    })
}

$.fn.ConvertHyperlinkProject = function () {
    var $this = this,
        $tr = $this.find('tr');

    $tr.each(function (i, ele) {
        var $ele = $(ele),
            $td = $ele.find('td');
        if (i < $tr.length - 1) {
            $td.each(function (j, jElem) {
                if (j < $td.length - 1) {
                    if ($('.pvtTable tbody tr:eq(' + (i - 1) + ') td:eq(' + j + ')')[0].innerText !== "") {
                        var Amnt = $('.pvtTable tbody tr:eq(' + (i - 1) + ') td:eq(' + j + ')')[0].innerText;
                        var Acnt = $('.pvtTable tbody tr:eq(' + (i - 1) + ') th:eq(0)')[0].innerText;
                        var prj = $('.pvtTable thead tr:eq(0) th:eq(' + (j + 2) + ')')[0].innerText;
                        $('.pvtTable tbody tr:eq(' + (i - 1) + ') td:eq(' + j + ')').replaceWith('<td><a class="tblLinkProject" href="#" data-id="' + Acnt + ',' + prj + '"> ' + Amnt + '</a> </td>');
                    }
                }
            });
        }
    })
}


$.fn.switchColumns = function (col1, col2) {
    var $this = this,
        $tr = $this.find('tr');

    $tr.each(function (i, ele) {
        if (i === 0) {
            var $ele = $(ele),
                $th = $ele.find('th'),
                $tht;

            $tht = $th.eq(col1 + 2).clone();
            $th.eq(col1 + 2).html($th.eq(col2 + 2).html());
            $th.eq(col2 + 2).html($tht.html());
        }
        else {
            var $ele = $(ele),
                $td = $ele.find('td'),
                $tdt;

            $tdt = $td.eq(col1).clone();
            $td.eq(col1).html($td.eq(col2).html());
            $td.eq(col2).html($tdt.html());
        }
    });
};

//$("#btnExport").click( function () {
//$(".pvtTable").table2excel({
//    name: "Worksheet Name",
//    filename: "SomeFile.xls"
//formats: ['xlsx'],
//filename: 'PnL Export.xslx'
//});

//});


function minDate(array) {
    var min = null;

    for (var i = 0; i < array.length; i++) {
        var current = array[i];

        if (min === null || current.Posting_Date < min.Posting_Date) {
            min = current;
        }
    }
    var str = min.Posting_Date;
    var year = str.substring(0, 4);
    var month = str.substring(5, 7);
    var date = str.substring(8, str.length);
    return month + '/' + date + '/' + year;
}

$(document).on('click', '#back', function () {
    $('#back').hide();
    $('#divDetail').hide();
    $('#pivot').show();
});


$(document).on('click', '.tblLink', function () {
    var finals = globalData;
    var recordToView = $(this).attr("data-id");
    var filter = $.grep(finals, function (n, i) {
        return n.G_L_Account_No == recordToView;
    });
    var str = "<table style='font-size: 12pt;text-align: left;border-collapse: collapse;'>";
    str += "<thead>";
    str += "<tr>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold; font-size: 12pt; padding: 5px;'>Account No</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Account Name</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Amount</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Posting Date</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Document Type</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>External Document_No</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Document No</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Description</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Project</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Department</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Company</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Vendor Name</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Translator Company</td>";
    str += "</tr>";
    str += "</thead>";

    $.each(filter, function (i, item) {
        str += "<tr>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.G_L_Account_No + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.G_L_Account_Name + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "text-align: right;'>" + numberWithCommas(item.Amount) + "</td>";
        var year = item.Posting_Date.substring(0, 4);
        var month = item.Posting_Date.substring(5, 7);
        var day = item.Posting_Date.substring(8, 10);

        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + month + '/' + day + '/' + year + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Document_Type + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.External_Document_No + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            ";'>" + item.Document_No + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Description + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Global_Dimension_1_Code + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Global_Dimension_2_Code + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.VLC_Shortcut_Dimension_3_Code + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Vendor_Name + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Translator + "</td>";
        str += "</tr>";
    });
    str += '</table>';
    $('#pivot').hide();
    $('#back').show();
    $('#divDetail').show();
    $('#divDetail').html(str);

});

$(document).on('click', '.tblLinkMonth', function () {
    var Months = {
        "January": "01",
        "Februaray": "02",
        "March": "03",
        "April": "04",
        "May": "05",
        "June": "06",
        "July": "07",
        "August": "08",
        "September": "09",
        "October": "10",
        "November": "11",
        "December": "12"
    };

    var finals = globalData;
    var recordToView = $(this).attr("data-id").split(",");

    var monthYear = recordToView[1].split(' ');
    var mnth = Months[monthYear[0]] + " " + monthYear[1];

    var filter = $.grep(finals, function (n, i) {
        return n.G_L_Account_No == recordToView[0] && n.MonthYear == mnth;
    });
    var str = "<table style='font-size: 12pt;text-align: left;border-collapse: collapse;'>";
    str += "<thead>";
    str += "<tr>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold; font-size: 12pt; padding: 5px;'>Account No</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Account Name</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Amount</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Posting Date</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Document Type</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>External Document_No</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Document No</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Description</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Project</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Department</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Company</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Vendor Name</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Translator Company</td>";
    str += "</tr>";
    str += "</thead>";

    $.each(filter, function (i, item) {
        str += "<tr>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.G_L_Account_No + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.G_L_Account_Name + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "text-align: right;'>" + numberWithCommas(item.Amount) + "</td>";
        var year = item.Posting_Date.substring(0, 4);
        var month = item.Posting_Date.substring(5, 7);
        var day = item.Posting_Date.substring(8, 10);

        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + month + '/' + day + '/' + year + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Document_Type + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.External_Document_No + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            ";'>" + item.Document_No + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Description + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Global_Dimension_1_Code + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Global_Dimension_2_Code + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.VLC_Shortcut_Dimension_3_Code + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Vendor_Name + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Translator + "</td>";
        str += "</tr>";
    });
    str += '</table>';
    $('#pivot').hide();
    $('#back').show();
    $('#divDetail').show();
    $('#divDetail').html(str);

});

$(document).on('click', '.tblLinkProject', function () {
    var finals = globalData;
    var recordToView = $(this).attr("data-id").split(",");


    var filter = $.grep(finals, function (n, i) {
        return n.G_L_Account_No == recordToView[0] && n.Global_Dimension_1_Code == recordToView[1];
    });
    var str = "<table style='font-size: 12pt;text-align: left;border-collapse: collapse;'>";
    str += "<thead>";
    str += "<tr>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold; font-size: 12pt; padding: 5px;'>Account No</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Account Name</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Amount</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Posting Date</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Document Type</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>External Document_No</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Document No</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Description</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Project</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Department</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Company</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Vendor Name</td>";
    str += "<td style='background-color: #e6EEEE;border: 1px solid #CDCDCD; font-weight:bold;font-size: 12pt; padding: 5px;'>Translator Company</td>";
    str += "</tr>";
    str += "</thead>";

    $.each(filter, function (i, item) {
        str += "<tr>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.G_L_Account_No + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.G_L_Account_Name + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "text-align: right;'>" + numberWithCommas(item.Amount) + "</td>";
        var year = item.Posting_Date.substring(0, 4);
        var month = item.Posting_Date.substring(5, 7);
        var day = item.Posting_Date.substring(8, 10);

        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + month + '/' + day + '/' + year + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Document_Type + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.External_Document_No + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            ";'>" + item.Document_No + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Description + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Global_Dimension_1_Code + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Global_Dimension_2_Code + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.VLC_Shortcut_Dimension_3_Code + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Vendor_Name + "</td>";
        str += "<td style='color: #3D3D3D;padding: 5px;background-color: #FFF;border: 1px solid #CDCDCD;vertical-align: top;" +
            "'>" + item.Translator + "</td>";
        str += "</tr>";
    });
    str += '</table>';
    $('#pivot').hide();
    $('#back').show();
    $('#divDetail').show();
    $('#divDetail').html(str);

});


function numberWithCommas(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}